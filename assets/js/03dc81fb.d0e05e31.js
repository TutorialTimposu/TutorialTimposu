"use strict";(self.webpackChunktimposu=self.webpackChunktimposu||[]).push([[2178],{7794:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>s,metadata:()=>i,toc:()=>u});var i=n(4255),r=n(4848),t=n(8453);const s={slug:"menulis-versi-rilis-software",title:"Cara Menulis Versi Rilis pada Software - Semantic Versioning & Changelog",authors:"topekox",tags:["blog","version","log"]},o=void 0,l={authorsImageUrls:[void 0]},u=[];function g(e){const a={a:"a",li:"li",p:"p",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(a.p,{children:[(0,r.jsx)(a.a,{href:"https://semver.org/",children:"Semantic Versioning"})," adalah best practice dari prinsip penulisan versi software, yang bertujuan untuk menjelaskan dasar perubahan pada perilisan produk software. Ini sudah menjadi standar dalam template library, terutama dalam project open source. Perilisan versi software dibagi menjadi pola tiga bagian utama yaitu:"]}),"\n",(0,r.jsxs)(a.ul,{children:["\n",(0,r.jsx)(a.li,{children:(0,r.jsx)(a.strong,{children:"Major"})}),"\n",(0,r.jsx)(a.li,{children:(0,r.jsx)(a.strong,{children:"Minor"})}),"\n",(0,r.jsx)(a.li,{children:(0,r.jsx)(a.strong,{children:"Patch"})}),"\n"]}),"\n",(0,r.jsxs)(a.p,{children:["Selain ketiga bagian versi di atas, sebenarnya masih ada versi ",(0,r.jsx)(a.strong,{children:"Pre-release"})," version, yaitu versi yang dirilis sebagai uji coba sebelum final rilis. Ini sebenarnya tidak wajib, tergantung kebutuhan."]})]})}function p(e={}){const{wrapper:a}={...(0,t.R)(),...e.components};return a?(0,r.jsx)(a,{...e,children:(0,r.jsx)(g,{...e})}):g(e)}},8453:(e,a,n)=>{n.d(a,{R:()=>s,x:()=>o});var i=n(6540);const r={},t=i.createContext(r);function s(e){const a=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function o(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),i.createElement(t.Provider,{value:a},e.children)}},4255:e=>{e.exports=JSON.parse('{"permalink":"/blog/menulis-versi-rilis-software","source":"@site/blog/2024-02-24-menulis-versi-software.md","title":"Cara Menulis Versi Rilis pada Software - Semantic Versioning & Changelog","description":"Semantic Versioning adalah best practice dari prinsip penulisan versi software, yang bertujuan untuk menjelaskan dasar perubahan pada perilisan produk software. Ini sudah menjadi standar dalam template library, terutama dalam project open source. Perilisan versi software dibagi menjadi pola tiga bagian utama yaitu:","date":"2024-02-24T00:00:00.000Z","tags":[{"inline":true,"label":"blog","permalink":"/blog/tags/blog"},{"inline":true,"label":"version","permalink":"/blog/tags/version"},{"inline":true,"label":"log","permalink":"/blog/tags/log"}],"readingTime":10.65,"hasTruncateMarker":true,"authors":[{"name":"Ucup TopekoX","title":"TimposuLabs creator","imageURL":"https://topekox.github.io/assets/images/avatar.jpeg","key":"topekox","page":null}],"frontMatter":{"slug":"menulis-versi-rilis-software","title":"Cara Menulis Versi Rilis pada Software - Semantic Versioning & Changelog","authors":"topekox","tags":["blog","version","log"]},"unlisted":false,"prevItem":{"title":"Cara Install dan menggunakan NVM (Node Version Manager)","permalink":"/blog/cara-menggunakan-nvm"},"nextItem":{"title":"Apa itu Java Recursive Method","permalink":"/blog/java-recursive-method"}}')}}]);