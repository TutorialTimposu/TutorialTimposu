"use strict";(self.webpackChunktimposu=self.webpackChunktimposu||[]).push([[5118],{9908:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>r,contentTitle:()=>o,default:()=>d,frontMatter:()=>s,metadata:()=>l,toc:()=>c});var l=a(3719),t=a(4848),i=a(8453);const s={slug:"java-optional",title:"Tips menangani NullPointerException dengan Java Optional",authors:"topekox",tags:["java","java optional"]},o=void 0,r={authorsImageUrls:[void 0]},c=[{value:"Check Null",id:"check-null",level:2},{value:"if Logic",id:"if-logic",level:2},{value:"Operation if Not Null",id:"operation-if-not-null",level:2},{value:"Operation to Null Value",id:"operation-to-null-value",level:2},{value:"nested If Checking",id:"nested-if-checking",level:2},{value:"Check and Throw Exception",id:"check-and-throw-exception",level:2},{value:"if Check Do Something",id:"if-check-do-something",level:2},{value:"neested Object",id:"neested-object",level:2},{value:"Filter",id:"filter",level:2}];function u(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["Bagi programmer Java sudah wajib hukumnya untuk selalu bertemu dengan ",(0,t.jsx)(n.code,{children:"NullPointerException"}),", dan ini sebenarnya membuat crash program kita, dan yang jelas kita harus sedikit garuk kepala untuk menangani exception ini. Cara yang paling populer adalah diakali dengan statement kondisi ",(0,t.jsx)(n.code,{children:"if else"}),". Untuk menangani ini, Java versi 8 mengenalkan fitur baru yaitu class baru bernama ",(0,t.jsx)(n.code,{children:"Optional"})," yang berada pada package ",(0,t.jsx)(n.code,{children:"java.util"}),". Class ini sangat membantu sekali untuk menangani ",(0,t.jsx)(n.code,{children:"null"})," tanpa harus dicek terlebih dahulu dengan statement kondisi ",(0,t.jsx)(n.code,{children:"if else"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["Berikut contoh program yang menghasilkan ",(0,t.jsx)(n.code,{children:"NullPointerException"})," :"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'public class DemoOptional {\n\n    public static void main(String[] args) {\n        \n        String[] students = new String[20];\n\t    String john = students[10].toUpperCase();\n\n        System.out.println("Name : " + john);        \n    }\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Sekilas program ini tidak ada yang salah, ketika dicompile program ini tidak akan mengalami pesan error, tetapi ketika dieksekusi program ini akan menghasilkan error dikarenakan variable ",(0,t.jsx)(n.code,{children:"john"})," yang dipanggil masih belum ada nilainya alias ",(0,t.jsx)(n.code,{children:"null"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["Ketika program ini di jalankan/run maka akan menghasilkan exception ",(0,t.jsx)(n.code,{children:"NullPointerException"}),", karena memang array students index 10 masih bernilai ",(0,t.jsx)(n.code,{children:"null"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'Exception in thread "main" java.lang.NullPointerException: Cannot invoke "String.toUpperCase()" because "<local1>[10]" is null\n\tat DemoOptional.main(DemoOptional.java:6)\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Nah untuk mengatasinya biasanya dibuatkan statement pemilihan ",(0,t.jsx)(n.code,{children:"if"})," untuk menghandle exception tersebut misalnya seperti di bawah ini:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'String[] students = new String[20];\n\n// cek nilai apakah null\nif (students[10] == null) {\n    students[10] = "John Doe";\n}\n\nString john = students[10].toUpperCase();\n\nSystem.out.println("Name : " + john);\n'})}),"\n",(0,t.jsx)(n.p,{children:"Output:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"Name : JOHN DOE\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Contoh penggunaan ",(0,t.jsx)(n.code,{children:"if"})," seperti contoh di atas tidaklah salah, tetapi karena seringnya programmer Java mendapatkan permasalahan seperti contoh di atas maka Java 8 membuatkan solusi lain menggunakan class ",(0,t.jsx)(n.code,{children:"Optional"}),". Contoh program di atas dapat disederhanakan menggunakan class Optional seperti contoh sebagai berikut:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'import java.util.Optional;\n\npublic class DemoOptional {\n    public static void main(String[] args) {\n        String[] students = new String[20];\n\n        String john = Optional.ofNullable(students[10])\n                .orElse("John Doe").toUpperCase();\n\n        System.out.println("Name : " + john);\n    }\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Output yang dihasilkan akan sama dengan program sebelumnya tetapi cara yang digunakan sedikit berbeda karena menggunakan class ",(0,t.jsx)(n.code,{children:"Optional"})," untuk memeriksa nilai dari ",(0,t.jsx)(n.code,{children:"student[10]"})," yang langsung memberikan nilai ketika bernilai Nullable."]}),"\n",(0,t.jsx)(n.p,{children:"Beberapa contoh penggunaan Optional."}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsx)(n.p,{children:"Yang berada dalam blok komentar adalah cara manual"})}),"\n",(0,t.jsx)(n.h2,{id:"check-null",children:"Check Null"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'//        String name = customer.getName();\n//        if (name == null) {\n//            name = "";\n//        }\n    \n String name = Optional.ofNullable(customer.getName())\n                .orElse("");\n'})}),"\n",(0,t.jsx)(n.h2,{id:"if-logic",children:"if Logic"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'//        Customer customer = repository.findById("id");\n//        if (customer == null) {\n//            customer = repository.createNew();\n//        }\n\nString nameUpper = Optional.ofNullable(customer.getName())\n                .map(value -> value.toUpperCase())\n                .orElse("");\n'})}),"\n",(0,t.jsx)(n.h2,{id:"operation-if-not-null",children:"Operation if Not Null"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'//                int id = 2;\n//                Person person = session.get(Person.class, id);\n//                if (person != null) {\n//                  System.out.println("Deleting");\n//                  session.delete(person);\n//                }\n\nint id = 2;\nOptional<Person> person = Optional.ofNullable(session.get(Person.class, id));\nperson.ifPresent(value -> session.delete(value));\n'})}),"\n",(0,t.jsx)(n.h2,{id:"operation-to-null-value",children:"Operation to Null Value"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'//        String nameUpper = customer.getName();\n//        if (nameUpper != null) {\n//            nameUpper = nameUpper.toUpperCase();\n//        } else {\n//            nameUpper = "";\n//        }\n\nString nameUpper = Optional.ofNullable(customer.getName())\n                .map(value -> value.toUpperCase())\n                .orElse("");\n'})}),"\n",(0,t.jsx)(n.h2,{id:"nested-if-checking",children:"nested If Checking"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'//        String country = "Indonesia";\n//        if (customer.getAddress() != null) {\n//            if (customer.getAddress().getCountry() != null) {\n//                country = customer.getAddress().getCountry();\n//            }\n//        }\n\nString country = Optional.ofNullable(customer.getAddress())\n                .map(address -> address.getCountry())\n                .orElse("Indonesia");\n\n'})}),"\n",(0,t.jsx)(n.h2,{id:"check-and-throw-exception",children:"Check and Throw Exception"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'//        String name = customer.getName();\n//        if (name == null) {\n//            throw new IllegalArgumentException("Name is null");\n//        }\n\nString name = Optional.ofNullable(customer.getName())\n                .orElseThrow(() -> new IllegalArgumentException("Name is null"));\n'})}),"\n",(0,t.jsx)(n.h2,{id:"if-check-do-something",children:"if Check Do Something"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"//        if (customer.getAddress() != null) {\n//            if (customer.getAddress().getCountry() != null) {\n//                System.out.println(customer.getAddress().getCountry());\n//            }\n//        }\n\nOptional.ofNullable(customer.getAddress())\n                .map(address -> address.getCountry())\n                .ifPresent(country -> System.out.println(country));\n\n"})}),"\n",(0,t.jsx)(n.h2,{id:"neested-object",children:"neested Object"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"//        Long cashBalance = 0L;\n//        if (customer.getWallet() != null) {\n//            if (customer.getWallet().getBalance() != null) {\n//                cashBalance = customer.getWallet().getBalance().getCashBalance();\n//            }\n//        }\n\nLong cashBalance = Optional.ofNullable(customer.getWallet())\n                .map(wallet -> wallet.getBalance())\n                .map(balance -> balance.getCashBalance())\n                .orElse(0L);\n"})}),"\n",(0,t.jsx)(n.h2,{id:"filter",children:"Filter"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"//        Long bonus = 0L;\n//        if (CustomerType.PLATINUM.equals(customer.getType())) {\n//            if (customer.getWallet() != null) {\n//                if (customer.getWallet().getBalance() != null) {\n//                    bonus = customer.getWallet().getBalance().getCashBalance() * 10 / 100;\n//                }\n//            }\n//        }\n\nLong bonus = Optional.ofNullable(customer)\n                .filter(value -> CustomerType.PLATINUM.equals(customer.getType()))\n                .map(value -> value.getWallet())\n                .map(wallet -> wallet.getBalance())\n                .map(balance -> balance.getCashBalance())\n                .map(cashBalance -> cashBalance * 10 / 100)\n                .orElse(0L);\n"})}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsxs)(n.p,{children:["Download ",(0,t.jsx)(n.a,{href:"https://github.com/TopekoX/java-optional-demo",children:"Source Code"})]})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Referensi"})," :"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://docs.oracle.com/javase/8/docs/api/java/util/Optional.html",children:"https://docs.oracle.com/javase/8/docs/api/java/util/Optional.html"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://www.youtube.com/watch?v=mucDS5Db9go",children:"https://www.youtube.com/watch?v=mucDS5Db9go"})}),"\n"]})]})}function d(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}},8453:(e,n,a)=>{a.d(n,{R:()=>s,x:()=>o});var l=a(6540);const t={},i=l.createContext(t);function s(e){const n=l.useContext(i);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),l.createElement(i.Provider,{value:n},e.children)}},3719:e=>{e.exports=JSON.parse('{"permalink":"/blog/java-optional","source":"@site/blog/2022-04-26-java-optional.md","title":"Tips menangani NullPointerException dengan Java Optional","description":"Bagi programmer Java sudah wajib hukumnya untuk selalu bertemu dengan NullPointerException, dan ini sebenarnya membuat crash program kita, dan yang jelas kita harus sedikit garuk kepala untuk menangani exception ini. Cara yang paling populer adalah diakali dengan statement kondisi if else. Untuk menangani ini, Java versi 8 mengenalkan fitur baru yaitu class baru bernama Optional yang berada pada package java.util. Class ini sangat membantu sekali untuk menangani null tanpa harus dicek terlebih dahulu dengan statement kondisi if else.","date":"2022-04-26T00:00:00.000Z","tags":[{"inline":true,"label":"java","permalink":"/blog/tags/java"},{"inline":true,"label":"java optional","permalink":"/blog/tags/java-optional"}],"readingTime":3.59,"hasTruncateMarker":true,"authors":[{"name":"Ucup TopekoX","title":"TimposuLabs creator","imageURL":"https://topekox.github.io/assets/images/avatar.jpeg","key":"topekox","page":null}],"frontMatter":{"slug":"java-optional","title":"Tips menangani NullPointerException dengan Java Optional","authors":"topekox","tags":["java","java optional"]},"unlisted":false,"prevItem":{"title":"Daftar Repository Lokal Ubuntu 22.04","permalink":"/blog/repo-lokal-ubuntu-22-04"},"nextItem":{"title":"5 Alasan menggunakan Golang untuk Aplikasi Enterpise","permalink":"/blog/alasan-menggunakan-golang-enterprise"}}')}}]);