"use strict";(self.webpackChunktimposu=self.webpackChunktimposu||[]).push([[3636],{3905:function(e,n,a){a.d(n,{Zo:function(){return c},kt:function(){return g}});var t=a(7294);function r(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function i(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function p(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?i(Object(a),!0).forEach((function(n){r(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function o(e,n){if(null==e)return{};var a,t,r=function(e,n){if(null==e)return{};var a,t,r={},i=Object.keys(e);for(t=0;t<i.length;t++)a=i[t],n.indexOf(a)>=0||(r[a]=e[a]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)a=i[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=t.createContext({}),l=function(e){var n=t.useContext(s),a=n;return e&&(a="function"==typeof e?e(n):p(p({},n),e)),a},c=function(e){var n=l(e.components);return t.createElement(s.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},u=t.forwardRef((function(e,n){var a=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),u=l(a),g=r,d=u["".concat(s,".").concat(g)]||u[g]||m[g]||i;return a?t.createElement(d,p(p({ref:n},c),{},{components:a})):t.createElement(d,p({ref:n},c))}));function g(e,n){var a=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=a.length,p=new Array(i);p[0]=u;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,p[1]=o;for(var l=2;l<i;l++)p[l]=a[l];return t.createElement.apply(null,p)}return t.createElement.apply(null,a)}u.displayName="MDXCreateElement"},546:function(e,n,a){a.r(n),a.d(n,{assets:function(){return c},contentTitle:function(){return s},default:function(){return g},frontMatter:function(){return o},metadata:function(){return l},toc:function(){return m}});var t=a(7462),r=a(3366),i=(a(7294),a(3905)),p=["components"],o={slug:"spring-mvc-eclipse",title:"Cara Membuat Project Spring MVC di Eclipse (XML Configuration)",authors:"topekox",tags:["spring","spring mvc","eclipse"]},s=void 0,l={permalink:"/blog/spring-mvc-eclipse",source:"@site/blog/2022-05-15-spring-mvc-eclipse/index.md",title:"Cara Membuat Project Spring MVC di Eclipse (XML Configuration)",description:"Eclipse adalah salah satu IDE favorit untuk membuat aplikasi Java, baik itu aplikasi standard maupun untuk skala Enterprise salah satunya membuat project Spring MVC. Salah satu kelebihannya karena lebih ringan dibanding IDE saingannya yaitu Intelij IDEA.",date:"2022-05-15T00:00:00.000Z",formattedDate:"May 15, 2022",tags:[{label:"spring",permalink:"/blog/tags/spring"},{label:"spring mvc",permalink:"/blog/tags/spring-mvc"},{label:"eclipse",permalink:"/blog/tags/eclipse"}],readingTime:2.735,truncated:!0,authors:[{name:"Ucup TopekoX",title:"Tutorial Timposu creator",url:"https://topekox.github.io",imageURL:"https://topekox.github.io/assets/images/avatar.jpeg",key:"topekox"}],frontMatter:{slug:"spring-mvc-eclipse",title:"Cara Membuat Project Spring MVC di Eclipse (XML Configuration)",authors:"topekox",tags:["spring","spring mvc","eclipse"]},prevItem:{title:"Menggunakan Scheduled/Penjadwalan di Spring Boot",permalink:"/blog/menggunakan-scheduled-spring-boot"},nextItem:{title:"Tutorial Membuat Aplikasi Web Spring Boot dan Angular (READ Only)",permalink:"/blog/spring-boot-angular"}},c={authorsImageUrls:[void 0]},m=[{value:"Gunakan Eclipse versi Enterprise Java and Web",id:"gunakan-eclipse-versi-enterprise-java-and-web",level:2},{value:"Buat Project Dynamic Web Project",id:"buat-project-dynamic-web-project",level:2},{value:"Konfigurasi pom.xml",id:"konfigurasi-pomxml",level:3},{value:"Konfigurasi web.xml",id:"konfigurasi-webxml",level:3},{value:"Buat Controller",id:"buat-controller",level:3},{value:"Buat View",id:"buat-view",level:3},{value:"Running",id:"running",level:3}],u={toc:m};function g(e){var n=e.components,o=(0,r.Z)(e,p);return(0,i.kt)("wrapper",(0,t.Z)({},u,o,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Eclipse adalah salah satu IDE favorit untuk membuat aplikasi Java, baik itu aplikasi standard maupun untuk skala Enterprise salah satunya membuat project Spring MVC. Salah satu kelebihannya karena lebih ringan dibanding IDE saingannya yaitu Intelij IDEA."),(0,i.kt)("p",null,"Akan tetapi membuat project Spring MVC mungkin sedikit ribet bagi pemula. Ada beberapa konfigurasi yang diperlukan, berikut tutorial membuat aplikasi Spring MVC di Eclipse."),(0,i.kt)("h2",{id:"gunakan-eclipse-versi-enterprise-java-and-web"},"Gunakan Eclipse versi Enterprise Java and Web"),(0,i.kt)("p",null,"Ketika mendownload Eclipse halaman default pada ",(0,i.kt)("a",{parentName:"p",href:"https://www.eclipse.org/downloads/"},"https://www.eclipse.org/downloads/"),", Eclipse versi ini berisi package untuk Eclipse for Java Developer yang berisi package standard untuk pemrograman Java Standard. Gunakan yang versi Eclipse Enterprise Java and Web di halaman ",(0,i.kt)("a",{parentName:"p",href:"https://www.eclipse.org/downloads/packages/"},"https://www.eclipse.org/downloads/packages/"),". Kenapa menggunakan versi Enterpise Java and Web, karena plugin untuk pemrograman web di Java sudah tersedia dalam package versi Eclipse ini."),(0,i.kt)("h2",{id:"buat-project-dynamic-web-project"},"Buat Project Dynamic Web Project"),(0,i.kt)("p",null,"Buka Eclipse dan buat Project Dynamic Web Project."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Spring MVC Eclipse",src:a(2061).Z,width:"577",height:"230"})),(0,i.kt)("p",null,"Kemudian sesuaikan Project Name:"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Spring MVC Eclipse",src:a(7476).Z,width:"1364",height:"840"})),(0,i.kt)("p",null,"Struktur direktori Dynamic Web Project di Eclipse:"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Spring MVC Eclipse",src:a(2323).Z,width:"312",height:"210"})),(0,i.kt)("p",null,"Selanjutnya kita convert projectnya ke Maven Project. Klik kanan pada project ",(0,i.kt)("em",{parentName:"p"},"Configure > Convert to Maven Project"),"."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Spring MVC Eclipse",src:a(6706).Z,width:"618",height:"294"})),(0,i.kt)("p",null,"Struktur direktori akan berubah menjadi struktur direktori maven."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Spring MVC Eclipse",src:a(3231).Z,width:"312",height:"388"})),(0,i.kt)("h3",{id:"konfigurasi-pomxml"},"Konfigurasi pom.xml"),(0,i.kt)("p",null,"Kita masukan dependency Spring MVC stadard, ubah konfigurasi ",(0,i.kt)("inlineCode",{parentName:"p"},"pom.xml")," seperti di bawah ini:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-xml",metastring:"title=pom.xml",title:"pom.xml"},'<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">\n    <modelVersion>4.0.0</modelVersion>\n    <groupId>com.tutorialtimposu</groupId>\n    <artifactId>DemoSpringMVC</artifactId>\n    <version>0.0.1-SNAPSHOT</version>\n    <packaging>war</packaging>\n    <properties>\n        <spring.version>5.3.18</spring.version>\n    </properties>\n\n    <dependencies>\n        <dependency>\n            <groupId>org.springframework</groupId>\n            <artifactId>spring-context</artifactId>\n            <version>${spring.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework</groupId>\n            <artifactId>spring-webmvc</artifactId>\n            <version>${spring.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework</groupId>\n            <artifactId>spring-web</artifactId>\n            <version>${spring.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>javax.servlet</groupId>\n            <artifactId>jstl</artifactId>\n            <version>1.2</version>\n        </dependency>\n        <dependency>\n            <groupId>javax.servlet.jsp.jstl</groupId>\n            <artifactId>jstl-api</artifactId>\n            <version>1.2</version>\n        </dependency>\n    </dependencies>\n\n    <build>\n        <plugins>\n            <plugin>\n                <artifactId>maven-compiler-plugin</artifactId>\n                <version>3.8.1</version>\n                <configuration>\n                    <source>17</source>\n                    <target>17</target>\n                </configuration>\n            </plugin>\n            <plugin>\n                <artifactId>maven-war-plugin</artifactId>\n                <version>3.2.3</version>\n            </plugin>\n        </plugins>\n    </build>\n</project>\n')),(0,i.kt)("h3",{id:"konfigurasi-webxml"},"Konfigurasi web.xml"),(0,i.kt)("p",null,"Masukan konfigurasi ",(0,i.kt)("inlineCode",{parentName:"p"},"web.xml")," pada direktor ",(0,i.kt)("inlineCode",{parentName:"p"},"/WEB-INF/web.xml")," seperti di bawah ini:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-xml",metastring:"title=web.xml",title:"web.xml"},'<?xml version="1.0" encoding="UTF-8"?>\n<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n    xmlns="http://xmlns.jcp.org/xml/ns/javaee"\n    xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"\n    id="WebApp_ID" version="3.1">\n    <display-name>DemoSpringMVC</display-name>\n    \x3c!-- Spring MVC Configs --\x3e\n\n    \x3c!-- Step 1: Configure Spring MVC Dispatcher Servlet --\x3e\n    <servlet>\n        <servlet-name>dispatcher</servlet-name>\n        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>\n        <init-param>\n            <param-name>contextConfigLocation</param-name>\n            <param-value>/WEB-INF/spring-mvc-demo-servlet.xml</param-value>\n        </init-param>\n        <load-on-startup>1</load-on-startup>\n    </servlet>\n\n    \x3c!-- Step 2: Set up URL mapping for Spring MVC Dispatcher Servlet --\x3e\n    <servlet-mapping>\n        <servlet-name>dispatcher</servlet-name>\n        <url-pattern>/</url-pattern>\n    </servlet-mapping>\n</web-app>\n')),(0,i.kt)("p",null,"Dari konfigurasi di atas kita harus membuat konfigurasi context nya di ",(0,i.kt)("inlineCode",{parentName:"p"},"/WEB-INF/spring-mvc-demo-servlet.xml"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-xml",metastring:"title=spring-mvc-demo-servlet.xml",title:"spring-mvc-demo-servlet.xml"},'<?xml version="1.0" encoding="UTF-8"?>\n<beans xmlns="http://www.springframework.org/schema/beans"\n    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n    xmlns:context="http://www.springframework.org/schema/context"\n    xmlns:mvc="http://www.springframework.org/schema/mvc"\n    xsi:schemaLocation="\n        http://www.springframework.org/schema/beans\n        http://www.springframework.org/schema/beans/spring-beans.xsd\n        http://www.springframework.org/schema/context\n        http://www.springframework.org/schema/context/spring-context.xsd\n        http://www.springframework.org/schema/mvc\n        http://www.springframework.org/schema/mvc/spring-mvc.xsd">\n\n    \x3c!-- Step 3: Add support for component scanning --\x3e\n    <context:component-scan\n        base-package="com.topekox.mvc" />\n\n    \x3c!-- Step 4: Add support for conversion, formatting and validation support --\x3e\n    <mvc:annotation-driven />\n\n    \x3c!-- Step 5: Define Spring MVC view resolver --\x3e\n    <bean\n        class="org.springframework.web.servlet.view.InternalResourceViewResolver">\n        <property name="prefix" value="/WEB-INF/view/" />\n        <property name="suffix" value=".jsp" />\n    </bean>\n    \n</beans>\n')),(0,i.kt)("p",null,"Sesuaikan base package component nya disini saya buat ",(0,i.kt)("inlineCode",{parentName:"p"},"com.topekox.mvc")," dan untuk bagian view nya saya buat di ",(0,i.kt)("inlineCode",{parentName:"p"},"/WEB-INF/view/")," dengan ekstensi ",(0,i.kt)("inlineCode",{parentName:"p"},"jsp"),"."),(0,i.kt)("h3",{id:"buat-controller"},"Buat Controller"),(0,i.kt)("p",null,"Selanjutnya kita buat controller, tapi sebelumnya kita buat package ",(0,i.kt)("inlineCode",{parentName:"p"},"com.topekox.mvc"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java",metastring:"title=HomeController.java",title:"HomeController.java"},'package com.topekox.mvc;\n\nimport org.springframework.stereotype.Controller;\nimport org.springframework.ui.Model;\nimport org.springframework.web.bind.annotation.RequestMapping;\n\n@Controller\npublic class HomeController {\n    \n    @RequestMapping(name = "/")\n    public String home(Model model) {\n        \n        model.addAttribute("name", "Ucup");\n        return "home";\n    }\n\n}\n')),(0,i.kt)("h3",{id:"buat-view"},"Buat View"),(0,i.kt)("p",null,"Buat file ",(0,i.kt)("inlineCode",{parentName:"p"},"home.jsp")," di direktori ",(0,i.kt)("inlineCode",{parentName:"p"},"/WEB-INF/view/home.jsp"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-html",metastring:"title=home.jsp",title:"home.jsp"},'<%@ page language="java" contentType="text/html; charset=UTF-8"\n    pageEncoding="UTF-8"%>\n<!DOCTYPE html>\n<html>\n<head>\n<meta charset="UTF-8">\n<title>Demo Spring MVC</title>\n</head>\n<body>\n    <h2>Hello ${name}</h2>\n</body>\n</html>\n')),(0,i.kt)("h3",{id:"running"},"Running"),(0,i.kt)("p",null,"Review struktur direktori:"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Spring MVC Eclipse",src:a(2123).Z,width:"311",height:"507"})),(0,i.kt)("p",null,"Running dengan Tomcat klik kanan pada project ",(0,i.kt)("em",{parentName:"p"},"Run As > Run on Server")," kemudian pilih server tomcat server anda kemudian lihat di browser:"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Spring MVC Eclipse",src:a(7124).Z,width:"737",height:"549"})),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},(0,i.kt)("a",{parentName:"p",href:"https://github.com/TutorialTimposu/tutorial-spring-from-blog/tree/main/SpringMVCEclipse"},"Source Code")))))}g.isMDXComponent=!0},2061:function(e,n,a){n.Z=a.p+"assets/images/1-76b3cfa4bebff7c3cd38be6117eddadb.png"},7476:function(e,n,a){n.Z=a.p+"assets/images/2-af336d0e2c26af5c934cc9b561e6d080.png"},2323:function(e,n,a){n.Z=a.p+"assets/images/3-4f35ebebb8ed9dcedddf0d404698d7f6.png"},6706:function(e,n,a){n.Z=a.p+"assets/images/4-1ba9d86f5544ab391ce22a9ac482919d.png"},3231:function(e,n,a){n.Z=a.p+"assets/images/5-d2f30da6895117179dcdfb9bca42a94f.png"},2123:function(e,n,a){n.Z=a.p+"assets/images/6-2229bb2f7ffe966ddd7e3b31aea0cecd.png"},7124:function(e,n,a){n.Z=a.p+"assets/images/7-0babe2c8a9646c052160cc27c5397a55.png"}}]);