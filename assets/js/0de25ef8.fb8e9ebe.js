"use strict";(self.webpackChunktimposu=self.webpackChunktimposu||[]).push([[2690],{6325:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>a,toc:()=>m});const a=JSON.parse('{"id":"java-unit-test/depedency-injection-in-test","title":"Depedency Injections di Test","description":"Tidak ada magic di JUnit, sebenarnya fitur TestInfo yang sebelumnya kita bahas adalah bagian dari dependency injection di JUnit","source":"@site/tutorial/java/java-unit-test/15-depedency-injection-in-test.md","sourceDirName":"java-unit-test","slug":"/java-unit-test/depedency-injection-in-test","permalink":"/java/java-unit-test/depedency-injection-in-test","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":15,"frontMatter":{"sidebar_position":15,"title":"Depedency Injections di Test"},"sidebar":"tutorialSidebar","previous":{"title":"Informasi Test","permalink":"/java/java-unit-test/test-information"}}');var i=n(4848),r=n(8453);const o={sidebar_position:15,title:"Depedency Injections di Test"},s=void 0,d={},m=[{value:"Membuat Parameter Resolver",id:"membuat-parameter-resolver",level:2},{value:"Membuat Test",id:"membuat-test",level:2}];function c(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(t.p,{children:["Tidak ada magic di JUnit, sebenarnya fitur TestInfo yang sebelumnya kita bahas adalah bagian dari dependency injection di JUnit\nDependency Injection sederhananya adalah bagaimana kita bisa memasukkan dependency (object/instance) ke dalam unit test secara otomatis tanpa proses manual. Saat kita menambah parameter di method unit test, sebenarnya kita bisa secara otomatis memasukkan parameter tersebut dengan bantuan ",(0,i.jsx)(t.code,{children:"ParameterResolver"}),". Contohnya ",(0,i.jsx)(t.code,{children:"TestInfo"})," yang kita bahas sebelumya, sebenarnya objectnya dibuat oleh ",(0,i.jsx)(t.code,{children:"TestInfoParameterResolver"}),"."]}),"\n",(0,i.jsx)(t.h2,{id:"membuat-parameter-resolver",children:"Membuat Parameter Resolver"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-java",children:"import java.util.Random;\n\nimport org.junit.jupiter.api.extension.ExtensionContext;\nimport org.junit.jupiter.api.extension.ParameterContext;\nimport org.junit.jupiter.api.extension.ParameterResolutionException;\nimport org.junit.jupiter.api.extension.ParameterResolver;\n\npublic class RandomParameterResolver implements ParameterResolver {\n\t\n\tprivate Random random = new Random();\n\n\t@Override\n\tpublic boolean supportsParameter(ParameterContext parameterContext, ExtensionContext extensionContext)\n\t\t\tthrows ParameterResolutionException {\n\t\treturn parameterContext.getParameter().getType() == Random.class;\n\t}\n\n\t@Override\n\tpublic Object resolveParameter(ParameterContext parameterContext, ExtensionContext extensionContext)\n\t\t\tthrows ParameterResolutionException {\n\t\treturn random;\n\t}\n\n}\n"})}),"\n",(0,i.jsx)(t.h2,{id:"membuat-test",children:"Membuat Test"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-java",children:"import java.util.Random;\n\nimport org.junit.jupiter.api.Assertions;\nimport org.junit.jupiter.api.Test;\nimport org.junit.jupiter.api.extension.ExtendWith;\nimport org.junit.jupiter.api.extension.Extensions;\n\nimport com.timposulabs.belajar.Calculator;\n\n@Extensions({\n\t@ExtendWith(RandomParameterResolver.class)\n})\npublic class RandomTest {\n\t\n\tprivate Calculator calculator = new Calculator();\n\t\n\t@Test\n\tvoid testRandom(Random random) {\n\t\tint a = random.nextInt();\n\t\tint b = random.nextInt();\n\t\t\n\t\tvar result = calculator.add(a, b);\n\t\tvar expect = a + b;\n\t\t\n\t\tAssertions.assertEquals(expect, result);\n\t}\n\n}\n"})})]})}function u(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>s});var a=n(6540);const i={},r=a.createContext(i);function o(e){const t=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),a.createElement(r.Provider,{value:t},e.children)}}}]);