"use strict";(self.webpackChunktimposu=self.webpackChunktimposu||[]).push([[6930],{6379:(t,a,n)=>{n.r(a),n.d(a,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>e,toc:()=>c});const e=JSON.parse('{"id":"java-collection/spliterator-interface","title":"Spliterator Interface","description":"Spliterator adalah interface yang bisa digunakan untuk melakukan partisi data collection. Biasanya ini digunakan ketika kita akan memproses collection dalam jumlah besar, lalu agar lebih cepat di split menjadi beberapa dan diproses secara paralel agar lebih cepat. Penggunaan Spliterator biasanya erat kaitannya dengan Java Thread atau Java Concurrency, namun di  materi ini kita tidak akan membahas tentang itu, lebih fokus ke Spliterator","source":"@site/tutorial/java/java-collection/23-spliterator-interface.md","sourceDirName":"java-collection","slug":"/java-collection/spliterator-interface","permalink":"/java/java-collection/spliterator-interface","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":23,"frontMatter":{"sidebar_position":23,"title":"Spliterator Interface"},"sidebar":"tutorialSidebar","previous":{"title":"Default Method","permalink":"/java/java-collection/default-method"},"next":{"title":"Collection to Array","permalink":"/java/java-collection/collection-to-array"}}');var r=n(4848),i=n(8453);const o={sidebar_position:23,title:"Spliterator Interface"},l=void 0,s={},c=[];function p(t){const a={admonition:"admonition",code:"code",p:"p",pre:"pre",...(0,i.R)(),...t.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(a.p,{children:"Spliterator adalah interface yang bisa digunakan untuk melakukan partisi data collection. Biasanya ini digunakan ketika kita akan memproses collection dalam jumlah besar, lalu agar lebih cepat di split menjadi beberapa dan diproses secara paralel agar lebih cepat. Penggunaan Spliterator biasanya erat kaitannya dengan Java Thread atau Java Concurrency, namun di  materi ini kita tidak akan membahas tentang itu, lebih fokus ke Spliterator"}),"\n",(0,r.jsx)(a.p,{children:"Contoh:"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-java",children:'import java.util.List;\r\nimport java.util.Spliterator;\r\n\r\npublic class DemoSpliteratorInterface {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\tList<String> names = List.of("Ade", "Recky", "Vivin", "Restu", "Dandy", "Komang");\r\n\t\t\r\n\t\tSpliterator<String> spliterator1 = names.spliterator();\r\n\t\tSpliterator<String> spliterator2 = spliterator1.trySplit();\r\n\t\tSpliterator<String> spliterator3 = spliterator2.trySplit();\r\n\t\t\r\n\t\tSystem.out.println(spliterator1.estimateSize());\r\n\t\tSystem.out.println(spliterator2.estimateSize());\r\n\t\tSystem.out.println(spliterator3.estimateSize());\r\n\r\n\t\t// iterasi dengan forEachRemaining\r\n\t\tSystem.out.println("Split 1");\r\n\t\tspliterator1.forEachRemaining(new Consumer<String>() {\r\n\t\t\t@Override\r\n\t\t\tpublic void accept(String value) {\r\n\t\t\t\tSystem.out.println(value);\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\tSystem.out.println("Split 2");\r\n\t\tspliterator2.forEachRemaining(new Consumer<String>() {\r\n\t\t\t@Override\r\n\t\t\tpublic void accept(String value) {\r\n\t\t\t\tSystem.out.println(value);\r\n\t\t\t}\r\n\t\t});\t\r\n\t}\r\n}\n'})}),"\n",(0,r.jsx)(a.p,{children:"Output:"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{children:"3\r\n2\r\n1\r\nSplit 1\r\nRestu\r\nDandy\r\nKomang\r\nSplit 2\r\nRecky\r\nVivin\n"})}),"\n",(0,r.jsx)(a.p,{children:"Spliterator cocok digunakan untuk memproses data collection yang memiliki elemen dengan jumlah yang besar. Misalnya sebuah collection yang memiliki data dengan jumlah 1 juta elemen data, dengan Spliterator kita dapat membaginya, misalnya  menjadi 10 split dengan masing-masing 100 ribu elemen data, kita dapat running/proses masing-masing 10 split tersebut secara paralel."}),"\n",(0,r.jsx)(a.admonition,{type:"info",children:(0,r.jsx)(a.p,{children:"Spliterator sering digunakan pada Java Multi Thread"})})]})}function u(t={}){const{wrapper:a}={...(0,i.R)(),...t.components};return a?(0,r.jsx)(a,{...t,children:(0,r.jsx)(p,{...t})}):p(t)}},8453:(t,a,n)=>{n.d(a,{R:()=>o,x:()=>l});var e=n(6540);const r={},i=e.createContext(r);function o(t){const a=e.useContext(i);return e.useMemo((function(){return"function"==typeof t?t(a):{...a,...t}}),[a,t])}function l(t){let a;return a=t.disableParentContext?"function"==typeof t.components?t.components(r):t.components||r:o(t.components),e.createElement(i.Provider,{value:a},t.children)}}}]);