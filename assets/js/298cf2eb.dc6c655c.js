"use strict";(self.webpackChunktimposu=self.webpackChunktimposu||[]).push([[7918],{9642:(n,e,a)=>{a.r(e),a.d(e,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>t,toc:()=>s});const t=JSON.parse('{"id":"java-collection/collection","title":"Java Interface Collection","description":"Collection merupakan parrent dari semua interface yang ada pada collections, dan merupakan turunan dari interface Iterable.","source":"@site/tutorial/java/java-collection/03-collection.md","sourceDirName":"java-collection","slug":"/java-collection/collection","permalink":"/java/java-collection/collection","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3,"title":"Java Interface Collection"},"sidebar":"tutorialSidebar","previous":{"title":"Java Iterable","permalink":"/java/java-collection/iterable"},"next":{"title":"Java List","permalink":"/java/java-collection/list"}}');var r=a(4848),i=a(8453);const o={sidebar_position:3,title:"Java Interface Collection"},l=void 0,c={},s=[];function d(n){const e={code:"code",p:"p",pre:"pre",...(0,i.R)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.code,{children:"Collection"})," merupakan parrent dari semua interface yang ada pada collections, dan merupakan turunan dari interface ",(0,r.jsx)(e.code,{children:"Iterable"}),"."]}),"\n",(0,r.jsxs)(e.p,{children:["Perbedaan ",(0,r.jsx)(e.code,{children:"Collection"})," dan ",(0,r.jsx)(e.code,{children:"Iterable"})," adalah  data pada ",(0,r.jsx)(e.code,{children:"Collection"})," dapat di modifikasi (bisa ditambah, ubah atau dihapus)."]}),"\n",(0,r.jsx)(e.p,{children:"Contoh:"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-java",children:'import java.util.ArrayList;\r\nimport java.util.Collection;\r\nimport java.util.List;\r\n\r\npublic class DemoCollection {\r\n    public static void main(String[] args) {\r\n        Collection<String> names = new ArrayList<String>();\r\n        names.add("Ucup");\r\n        names.add("Recky");\r\n        names.add("Restu");\r\n        names.add("Ade");\r\n        names.addAll(List.of("Vivin", "Nurul", "Rani"));\r\n\r\n        for (var name : names) {\r\n            System.out.println(name);\r\n        }\r\n        \r\n        // Remove\r\n        System.out.println("\\nREMOVE");\r\n        names.remove("Rani");\r\n        names.remove("Recky");\r\n        names.removeAll(List.of("Ucup", "Restu"));\r\n        \r\n        for (var name : names) {\r\n        \tSystem.out.println(name);\r\n        }\r\n        \r\n        // Mengecek data collection menggunakan contains()\r\n        System.out.println("\\nCek data");\r\n        System.out.println(names.contains("Vivin"));\r\n        System.out.println(names.containsAll(List.of("Nurul", "Ade")));\r\n        System.out.println(names.containsAll(List.of("Nurul", "Recky"))); // false -> data yang dimasukan harus lengkap\r\n    }\r\n}\n'})}),"\n",(0,r.jsx)(e.p,{children:"Output:"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{children:"Ucup\r\nRecky\r\nRestu\r\nAde\r\nVivin\r\nNurul\r\nRani\r\n\r\nREMOVE\r\nAde\r\nVivin\r\nNurul\r\n\r\nCek data\r\ntrue\r\ntrue\r\nfalse\n"})})]})}function u(n={}){const{wrapper:e}={...(0,i.R)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(d,{...n})}):d(n)}},8453:(n,e,a)=>{a.d(e,{R:()=>o,x:()=>l});var t=a(6540);const r={},i=t.createContext(r);function o(n){const e=t.useContext(i);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:o(n.components),t.createElement(i.Provider,{value:e},n.children)}}}]);