"use strict";(self.webpackChunktimposu=self.webpackChunktimposu||[]).push([[710],{376:(a,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>l,default:()=>c,frontMatter:()=>r,metadata:()=>e,toc:()=>o});const e=JSON.parse('{"id":"java-unit-test/assertions","title":"Assertions","description":"Saat membuat test, kita harus memastikan bahwa test tersebut sesuai dengan ekspektasi yang kita inginkan. Jika manual, kita bisa melakukan pengecekan if else, namun itu tidak direkomendasikan. JUnit memiliki fitur untuk melakukan assertions, yaitu memastikan bahwa unit test sesuai dengan kondisi yang kita inginkan. Assertions di JUnit di representasikan dalam class Assertions, dan di dalamnya terdapat banyak sekali function static.","source":"@site/tutorial/java/java-unit-test/03-assertions.md","sourceDirName":"java-unit-test","slug":"/java-unit-test/assertions","permalink":"/java/java-unit-test/assertions","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3,"title":"Assertions"},"sidebar":"tutorialSidebar","previous":{"title":"Membuat Test","permalink":"/java/java-unit-test/membuat-test"},"next":{"title":"Mengubah Nama Unit Test","permalink":"/java/java-unit-test/mengubah-nama-test"}}');var s=n(4848),i=n(8453);const r={sidebar_position:3,title:"Assertions"},l=void 0,u={},o=[{value:"Class Calculator",id:"class-calculator",level:2},{value:"Import Assertions static method",id:"import-assertions-static-method",level:2},{value:"Membuat Test dengan Assertions",id:"membuat-test-dengan-assertions",level:2}];function d(a){const t={a:"a",admonition:"admonition",code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...a.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.p,{children:"Saat membuat test, kita harus memastikan bahwa test tersebut sesuai dengan ekspektasi yang kita inginkan. Jika manual, kita bisa melakukan pengecekan if else, namun itu tidak direkomendasikan. JUnit memiliki fitur untuk melakukan assertions, yaitu memastikan bahwa unit test sesuai dengan kondisi yang kita inginkan. Assertions di JUnit di representasikan dalam class Assertions, dan di dalamnya terdapat banyak sekali function static."}),"\n",(0,s.jsx)(t.admonition,{type:"info",children:(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"https://junit.org/junit5/docs/current/api/org.junit.jupiter.api/org/junit/jupiter/api/Assertions.html",children:"https://junit.org/junit5/docs/current/api/org.junit.jupiter.api/org/junit/jupiter/api/Assertions.html"})})}),"\n",(0,s.jsx)(t.h2,{id:"class-calculator",children:"Class Calculator"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-java",children:'public class Calculator {\n\n\tpublic Integer add(int x, int y) {\n\t\treturn x + y;\n\t}\n\t\n\tpublic Integer divide(int x, int y) {\n\t\tif (y == 0) {\n\t\t\tthrow new IllegalArgumentException("Tidak dapat dibagi 0");\n\t\t} else {\n\t\t\treturn x / y;\n\t\t}\n\t}\n\t\n}\n'})}),"\n",(0,s.jsx)(t.h2,{id:"import-assertions-static-method",children:"Import Assertions static method"}),"\n",(0,s.jsx)(t.p,{children:"Kita akan menggunakan banyak method static dalam class Assertions jadi pada tutorial ini saya akan melakukan import semua method static pada Assertions."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-java",children:"import static org.junit.jupiter.api.Assertions.*;\n"})}),"\n",(0,s.jsx)(t.h2,{id:"membuat-test-dengan-assertions",children:"Membuat Test dengan Assertions"}),"\n",(0,s.jsxs)(t.p,{children:["Dalam class Asseertions terdapat banyak sekali method static yang dapat digunakan, kita ambil contoh salah satunya menggunakan ",(0,s.jsx)(t.code,{children:"assertEquals()"}),"."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-java",children:"assertEquals(expected, actual);\n"})}),"\n",(0,s.jsxs)(t.p,{children:["dimana ",(0,s.jsx)(t.code,{children:"expected"})," adalah nilai ekspektasi dan ",(0,s.jsx)(t.code,{children:"actual"})," adalah nilai aktual yang ada, test berhasil jika kedua parameter tersebut cocok. Jika menggunakan cara manual misalnya kita akan mencari nilai dengan ekspektasi 50 biasanya menggunaka ",(0,s.jsx)(t.code,{children:"if"})," dan ini tidak direkomendasikan di dalam unit test:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-java",children:'if (result != 50) {\n    throw new RuntimeException("Test Gagal");\n}\n'})}),"\n",(0,s.jsxs)(t.p,{children:["Berikut contoh menggunakan unit test dengan ",(0,s.jsx)(t.code,{children:"assertEquals"}),":"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-java",children:'import static org.junit.jupiter.api.Assertions.*;\nimport org.junit.jupiter.api.Test;\n\npublic class AppTest {\n\t\n    private Calculator calculator = new Calculator();\n\t\t\n   @Test\n    public void testAddSuccess() {\n    \tvar result = calculator.add(30, 20);\n    \t\n    \t// cara manual tidak di rekomendasikan\n    \tif (result != 50) {\n    \t\tthrow new RuntimeException("Test Gagal");\n    \t}\n    \t\n    \t// menggunakan assertion, cara best practice\n    \tassertEquals(50, result);\n    }\n    \n    @Test\n    public void testDivideSuccess() {\n    \tvar result = calculator.divide(6, 2);\n    \tassertEquals(3, result);\n    }\n}\n'})}),"\n",(0,s.jsxs)(t.p,{children:["Result jika sukses menggunakan ",(0,s.jsx)(t.code,{children:"mvn clean test"}),":"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"...\n[INFO] -------------------------------------------------------\n[INFO]  T E S T S\n[INFO] -------------------------------------------------------\n[INFO] Running com.timposulabs.AppTest\n[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.032 s -- in com.timposulabs.AppTest\n[INFO] \n[INFO] Results:\n[INFO] \n[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0\n[INFO] \n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  1.273 s\n[INFO] Finished at: 2025-02-22T20:57:12+08:00\n[INFO] ------------------------------------------------------------------------\n"})}),"\n",(0,s.jsxs)(t.p,{children:["Selain menggunakan ",(0,s.jsx)(t.code,{children:"assertEquals()"})," terdapat method static lain yang dapat digunakan sesuai kebutuhan."]})]})}function c(a={}){const{wrapper:t}={...(0,i.R)(),...a.components};return t?(0,s.jsx)(t,{...a,children:(0,s.jsx)(d,{...a})}):d(a)}},8453:(a,t,n)=>{n.d(t,{R:()=>r,x:()=>l});var e=n(6540);const s={},i=e.createContext(s);function r(a){const t=e.useContext(i);return e.useMemo((function(){return"function"==typeof a?a(t):{...t,...a}}),[t,a])}function l(a){let t;return t=a.disableParentContext?"function"==typeof a.components?a.components(s):a.components||s:r(a.components),e.createElement(i.Provider,{value:t},a.children)}}}]);