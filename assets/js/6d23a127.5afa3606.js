"use strict";(self.webpackChunktimposu=self.webpackChunktimposu||[]).push([[9783],{4400:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>s,default:()=>d,frontMatter:()=>l,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"java-collection/navigableset","title":"Java NavigableSet","description":"NavigableSet adalah turunan dari SortedSet. NavigableSet menambah method-method untuk melakukan navigasi pencarian element, seperti mencari elemen yang lebih besar dari, kurang dari, membalikkan urutan set, dan lain-lain.","source":"@site/tutorial/java/java-collection/09-navigableset.md","sourceDirName":"java-collection","slug":"/java-collection/navigableset","permalink":"/java/java-collection/navigableset","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":9,"frontMatter":{"sidebar_position":9,"title":"Java NavigableSet"},"sidebar":"tutorialSidebar","previous":{"title":"Java SortedSet","permalink":"/java/java-collection/sorted-set"},"next":{"title":"Java Queue","permalink":"/java/java-collection/queue"}}');var i=a(4848),r=a(8453);const l={sidebar_position:9,title:"Java NavigableSet"},s=void 0,o={},c=[{value:"Immutable NavigableSet",id:"immutable-navigableset",level:2}];function u(e){const t={code:"code",h2:"h2",img:"img",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"NavigableSet"})," adalah turunan dari ",(0,i.jsx)(t.code,{children:"SortedSet"}),". ",(0,i.jsx)(t.code,{children:"NavigableSet"})," menambah method-method untuk melakukan navigasi pencarian element, seperti mencari elemen yang lebih besar dari, kurang dari, membalikkan urutan set, dan lain-lain."]}),"\n",(0,i.jsxs)(t.p,{children:["Berikut method-method dalam interface ",(0,i.jsx)(t.code,{children:"NavigableSet"}),":"]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{src:a(5822).A+"",width:"399",height:"485"})}),"\n",(0,i.jsx)(t.p,{children:"Contoh:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-java",children:'import java.util.Collections;\nimport java.util.NavigableSet;\nimport java.util.Set;\nimport java.util.TreeSet;\n\npublic class DemoNavigableSet {\n\n\tpublic static void main(String[] args) {\n\t\t\n\t\tNavigableSet<String> persons = new TreeSet<String>();\n\t\tpersons.addAll(Set.of("Ucup", "Azwar", "Munir", "Ketut", "Eta", "Gunawan"));\n\t\t\n\t\tSystem.out.println("Data Person:");\n\t\tprintOut(persons);\n\t\t\n\t\tSystem.out.println("Reverse Person:");\n\t\tprintOut(persons.descendingSet());\n\t\t\n\t\tSystem.out.println("Reverse Person:");\n\t\tprintOut(persons.tailSet("Ketut", true)); // inclusive true jika nama sort pengembalian dimulai dari endpoint dalam hal ini"Ketut" akan disertakan dalam tampilan yang dikembalikan\n\t\t\t\t\n\t}\n\t\n\tstatic void printOut(NavigableSet<String> persons) {\n\t\tfor(var p : persons) {\n\t\t\tSystem.out.println(p);\n\t\t}\n\t}\n\n}\n'})}),"\n",(0,i.jsx)(t.h2,{id:"immutable-navigableset",children:"Immutable NavigableSet"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-java",children:'// Immutable NavigableSet\nNavigableSet<String> personsImmutable = Collections.unmodifiableNavigableSet(persons);\npersonsImmutable.add("Budi"); // Error\n\n// Membuat Collection Menjadi Kosong\npersonsImmutable = Collections.emptyNavigableSet();\n'})})]})}function d(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},5822:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/navigableset-f204b89a006758686fa8ae45dc5f1563.png"},8453:(e,t,a)=>{a.d(t,{R:()=>l,x:()=>s});var n=a(6540);const i={},r=n.createContext(i);function l(e){const t=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),n.createElement(r.Provider,{value:t},e.children)}}}]);