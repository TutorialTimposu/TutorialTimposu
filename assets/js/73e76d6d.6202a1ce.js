"use strict";(self.webpackChunktimposu=self.webpackChunktimposu||[]).push([[5361],{2022:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>d,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"java-collection/set","title":"Java Set","description":"Set adalah salah satu collection yang berisikan elemen-elemen yang unik, atau tidak boleh duplicate.","source":"@site/tutorial/java/java-collection/06-set.md","sourceDirName":"java-collection","slug":"/java-collection/set","permalink":"/java/java-collection/set","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"sidebar_position":6,"title":"Java Set"},"sidebar":"tutorialSidebar","previous":{"title":"Immutable List","permalink":"/java/java-collection/immutable-list"},"next":{"title":"Immutable Set","permalink":"/java/java-collection/immutable-set"}}');var s=n(4848),i=n(8453);const d={sidebar_position:6,title:"Java Set"},r=void 0,l={},c=[{value:"Implentasi Set",id:"implentasi-set",level:2},{value:"HashSet",id:"hashset",level:3},{value:"LinkedHashSet",id:"linkedhashset",level:2},{value:"EnumSet",id:"enumset",level:2}];function o(e){const a={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(a.p,{children:[(0,s.jsx)(a.code,{children:"Set"})," adalah salah satu collection yang berisikan elemen-elemen yang unik, atau tidak boleh duplicate."]}),"\n",(0,s.jsxs)(a.ul,{children:["\n",(0,s.jsxs)(a.li,{children:[(0,s.jsx)(a.code,{children:"Set"})," tidak memiliki index seperti di ",(0,s.jsx)(a.code,{children:"List"}),", oleh karena itu tidak ada jaminan data yang ada di ",(0,s.jsx)(a.code,{children:"Set"})," itu akan terurut sesuai dengan waktu kita memasukkan data ke ",(0,s.jsx)(a.code,{children:"Set"}),"."]}),"\n",(0,s.jsxs)(a.li,{children:[(0,s.jsx)(a.code,{children:"Set"})," tidak memiliki method baru, jadi hanya menggunakan method yang ada di interface parent-nya, yaitu ",(0,s.jsx)(a.code,{children:"Collection"})," dan ",(0,s.jsx)(a.code,{children:"Iterable"}),"."]}),"\n",(0,s.jsxs)(a.li,{children:["Karena tidak memiliki index, untuk mengambil data di ",(0,s.jsx)(a.code,{children:"Set"})," juga kita harus melakukan iterasi satu per satu."]}),"\n"]}),"\n",(0,s.jsxs)(a.p,{children:["Jadi bisa dikatakan ",(0,s.jsx)(a.code,{children:"Set"})," adalah collection yang menampung elemen-elemenya secara unik sehingga datanya tidak ada yang ganda/sama."]}),"\n",(0,s.jsxs)(a.p,{children:["Method yang dapat digunakan pada ",(0,s.jsx)(a.code,{children:"Set"}),":"]}),"\n",(0,s.jsx)(a.p,{children:(0,s.jsx)(a.img,{src:n(2249).A+"",width:"380",height:"769"})}),"\n",(0,s.jsxs)(a.p,{children:[(0,s.jsx)(a.code,{children:"Set"})," memiliki implentasi diantaranya:"]}),"\n",(0,s.jsxs)(a.p,{children:[(0,s.jsx)(a.img,{src:"https://www.programiz.com/sites/tutorial2program/files/java-set-implementation.png",alt:""}),"\n",(0,s.jsx)(a.em,{children:(0,s.jsx)(a.strong,{children:"source"})}),": ",(0,s.jsx)(a.a,{href:"https://www.programiz.com/sites/tutorial2program/files/java-set-implementation.png",children:"https://www.programiz.com/sites/tutorial2program/files/java-set-implementation.png"})]}),"\n",(0,s.jsx)(a.h2,{id:"implentasi-set",children:"Implentasi Set"}),"\n",(0,s.jsxs)(a.p,{children:["Berikut beberapa implementasi Interface ",(0,s.jsx)(a.code,{children:"Set"}),":"]}),"\n",(0,s.jsxs)(a.table,{children:[(0,s.jsx)(a.thead,{children:(0,s.jsxs)(a.tr,{children:[(0,s.jsx)(a.th,{children:"Nama"}),(0,s.jsx)(a.th,{children:"Uraian"})]})}),(0,s.jsxs)(a.tbody,{children:[(0,s.jsxs)(a.tr,{children:[(0,s.jsx)(a.td,{children:(0,s.jsx)(a.code,{children:"HashSet"})}),(0,s.jsx)(a.td,{children:"menampung datanya secara acak berdasarkan Hash"})]}),(0,s.jsxs)(a.tr,{children:[(0,s.jsx)(a.td,{children:(0,s.jsx)(a.code,{children:"LinkedHashSet"})}),(0,s.jsx)(a.td,{children:"menampung datanya secara berurut menurut waktu pemasukan data (data  baru ditambah di bawah)"})]}),(0,s.jsxs)(a.tr,{children:[(0,s.jsx)(a.td,{children:(0,s.jsx)(a.code,{children:"EnumSet"})}),(0,s.jsxs)(a.td,{children:["implementasi ",(0,s.jsx)(a.code,{children:"Set"})," yang datanya harus Enum"]})]})]})]}),"\n",(0,s.jsx)(a.h3,{id:"hashset",children:"HashSet"}),"\n",(0,s.jsxs)(a.p,{children:["Berikut contoh ",(0,s.jsx)(a.code,{children:"HashSet"})," yang menampung datanya secara acak berdasarkan Hash."]}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-java",children:'import java.util.HashSet;\nimport java.util.Set;\n\npublic class DemoSet {\n\t\n\tpublic static void main(String[] args) {\n\t\t\n\t\tSet<String> persons = new HashSet<String>();\n\t\tpersons.add("Ucup");\n\t\tpersons.add("Ade");\n\t\tpersons.add("Restu");\n\t\tpersons.add("Ade");\n\t\tpersons.add("Ucup");\n\t\t\n\t\tfor (var p : persons) {\n\t\t\tSystem.out.println(p);\n\t\t}\n\t}\n\t\n}\n'})}),"\n",(0,s.jsx)(a.p,{children:"Output:"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{children:"Ucup\nRestu\nAde\n"})}),"\n",(0,s.jsxs)(a.p,{children:["Dari output di atas data dapat dilihat bahwa data yang ditampung dalam ",(0,s.jsx)(a.code,{children:"HashSet"})," tidak ada yang sama, dan ditampung secara acak tidak berdasarkan waktu memasukan data."]}),"\n",(0,s.jsx)(a.h2,{id:"linkedhashset",children:"LinkedHashSet"}),"\n",(0,s.jsxs)(a.p,{children:["Berikut contoh ",(0,s.jsx)(a.code,{children:"LinkedHashSet"}),":"]}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-java",children:'Set<String> persons = new LinkedHashSet<String>();\n\npersons.add("Ucup");\npersons.add("Ade");\npersons.add("Restu");\npersons.add("Ade");\npersons.add("Ucup");\n\nfor (var p : persons) {\n\tSystem.out.println(p);\n}\n'})}),"\n",(0,s.jsx)(a.p,{children:"Output:"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{children:"Ucup\nAde\nRestu\n"})}),"\n",(0,s.jsxs)(a.p,{children:["Dari output di atas data dapat dilihat bahwa data yang ditampung dalam ",(0,s.jsx)(a.code,{children:"LinkedHashSet"})," tidak ada yang sama, dan ditampung berdasarkan waktu memasukan data."]}),"\n",(0,s.jsx)(a.h2,{id:"enumset",children:"EnumSet"}),"\n",(0,s.jsxs)(a.p,{children:["Berikut contoh ",(0,s.jsx)(a.code,{children:"EnumSet"}),":"]}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-java",children:"public class DemoSet {\n\t\n\tstatic enum Color {\n\t\tRED, GREEN, BLUE, YELLOW\n\t}\n\n\tpublic static void main(String[] args) {\n\n\t\tSet<Color> colors = EnumSet.allOf(Color.class);\n\t\t\tfor(var c : colors) {\n\t\t\t\tSystem.out.println(c);\n\t\t\t}\n\t\t}\n}\n"})}),"\n",(0,s.jsx)(a.p,{children:"Output:"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{children:"RED\nGREEN\nBLUE\nYELLOW\n"})}),"\n",(0,s.jsxs)(a.p,{children:["Jika hanya menggunakan beberapa data pada ",(0,s.jsx)(a.code,{children:"Enum"}),", gunakan method ",(0,s.jsx)(a.code,{children:"of()"}),":"]}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-java",children:"Set<Color> colors = EnumSet.of(Color.BLUE, Color.YELLOW);\n\nfor(var c : colors) {\n\tSystem.out.println(c);\n}\n"})})]})}function h(e={}){const{wrapper:a}={...(0,i.R)(),...e.components};return a?(0,s.jsx)(a,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},2249:(e,a,n)=>{n.d(a,{A:()=>t});const t=n.p+"assets/images/set-method-ad64abfdd8102b0046d375712f74ff6d.png"},8453:(e,a,n)=>{n.d(a,{R:()=>d,x:()=>r});var t=n(6540);const s={},i=t.createContext(s);function d(e){const a=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function r(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),t.createElement(i.Provider,{value:a},e.children)}}}]);