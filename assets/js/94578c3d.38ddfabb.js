"use strict";(self.webpackChunktimposu=self.webpackChunktimposu||[]).push([[9139],{3905:function(e,n,a){a.d(n,{Zo:function(){return s},kt:function(){return m}});var t=a(7294);function i(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function r(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function o(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?r(Object(a),!0).forEach((function(n){i(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function d(e,n){if(null==e)return{};var a,t,i=function(e,n){if(null==e)return{};var a,t,i={},r=Object.keys(e);for(t=0;t<r.length;t++)a=r[t],n.indexOf(a)>=0||(i[a]=e[a]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)a=r[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var c=t.createContext({}),l=function(e){var n=t.useContext(c),a=n;return e&&(a="function"==typeof e?e(n):o(o({},n),e)),a},s=function(e){var n=l(e.components);return t.createElement(c.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},u=t.forwardRef((function(e,n){var a=e.components,i=e.mdxType,r=e.originalType,c=e.parentName,s=d(e,["components","mdxType","originalType","parentName"]),u=l(a),m=i,v=u["".concat(c,".").concat(m)]||u[m]||p[m]||r;return a?t.createElement(v,o(o({ref:n},s),{},{components:a})):t.createElement(v,o({ref:n},s))}));function m(e,n){var a=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var r=a.length,o=new Array(r);o[0]=u;var d={};for(var c in n)hasOwnProperty.call(n,c)&&(d[c]=n[c]);d.originalType=e,d.mdxType="string"==typeof e?e:i,o[1]=d;for(var l=2;l<r;l++)o[l]=a[l];return t.createElement.apply(null,o)}return t.createElement.apply(null,a)}u.displayName="MDXCreateElement"},7517:function(e,n,a){a.r(n),a.d(n,{assets:function(){return s},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return d},metadata:function(){return l},toc:function(){return p}});var t=a(7462),i=a(3366),r=(a(7294),a(3905)),o=["components"],d={slug:"service-android",title:"Membuat Service Android (Background & Foreground)",authors:"topekox",tags:["android","android-java"]},c=void 0,l={permalink:"/blog/service-android",source:"@site/blog/2022-06-13-service-android/index.md",title:"Membuat Service Android (Background & Foreground)",description:"Service adalah proses yang berjalan dibelakang layar. Service tidak memiliki UI, tapi bekerja lebih ke-proses suatu pekerjaan. Untuk membuat service di Android, dulu sering dibuat menggunakan class IntentService. Namun, sayangnya class IntentService sudah di-deprecated. Tapi kita masih bisa menggunakan class Service secara manual, yang bisa digunakan menggunakan Background Service atau Foreground Service.",date:"2022-06-13T00:00:00.000Z",formattedDate:"June 13, 2022",tags:[{label:"android",permalink:"/blog/tags/android"},{label:"android-java",permalink:"/blog/tags/android-java"}],readingTime:4.075,truncated:!0,authors:[{name:"Ucup TopekoX",title:"Tutorial Timposu creator",url:"https://topekox.github.io",imageURL:"https://topekox.github.io/assets/images/avatar.jpeg",key:"topekox"}],frontMatter:{slug:"service-android",title:"Membuat Service Android (Background & Foreground)",authors:"topekox",tags:["android","android-java"]},prevItem:{title:"Cara Membuat Project Spring MVC dengan Maven - XML Configuration (Bundle Tomcat)",permalink:"/blog/spring-mvc-maven-xml"},nextItem:{title:"Menggunakan Scheduled/Penjadwalan di Spring Boot",permalink:"/blog/menggunakan-scheduled-spring-boot"}},s={authorsImageUrls:[void 0]},p=[{value:"Background Service",id:"background-service",level:2},{value:"Foreground Service",id:"foreground-service",level:2},{value:"Menambahkan Notifikasi",id:"menambahkan-notifikasi",level:3},{value:"Service Always ON",id:"service-always-on",level:3}],u={toc:p};function m(e){var n=e.components,d=(0,i.Z)(e,o);return(0,r.kt)("wrapper",(0,t.Z)({},u,d,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Service adalah proses yang berjalan dibelakang layar. Service tidak memiliki UI, tapi bekerja lebih ke-proses suatu pekerjaan. Untuk membuat service di Android, dulu sering dibuat menggunakan class ",(0,r.kt)("inlineCode",{parentName:"p"},"IntentService"),". Namun, sayangnya class ",(0,r.kt)("inlineCode",{parentName:"p"},"IntentService")," sudah di-deprecated. Tapi kita masih bisa menggunakan class ",(0,r.kt)("inlineCode",{parentName:"p"},"Service")," secara manual, yang bisa digunakan menggunakan Background Service atau Foreground Service."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://images.unsplash.com/photo-1587840178393-079769787b40?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=870&q=80",alt:"Android"})),(0,r.kt)("h2",{id:"background-service"},"Background Service"),(0,r.kt)("p",null,"Background Service digunakan untuk menjalankan Service di background, namun service ini akan mati ketika aplikasi kita dimatikan."),(0,r.kt)("p",null,"Cara membuatnya, yaitu buat sebuah class extends ",(0,r.kt)("inlineCode",{parentName:"p"},"Service")," disini saya beri nama ",(0,r.kt)("inlineCode",{parentName:"p"},"MyBackgroundService.java")," dan override method ",(0,r.kt)("inlineCode",{parentName:"p"},"onStartCommand"),", dan buat ",(0,r.kt)("inlineCode",{parentName:"p"},"Thread")," baru di dalam method tersebut."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java",metastring:"title=MyBackgroundService.java",title:"MyBackgroundService.java"},'package com.topekox.demoservice;\n\nimport android.app.Service;\nimport android.content.Intent;\nimport android.os.IBinder;\nimport android.util.Log;\n\nimport androidx.annotation.Nullable;\n\npublic class MyBackgroundService extends Service {\n\n    @Override\n    public int onStartCommand(Intent intent, int flags, int startId) {\n        new Thread(new Runnable() {\n            @Override\n            public void run() {\n                while (true) {\n                    Log.e("SERVICE", "Service is running...");\n                    try {\n                        Thread.sleep(2000);\n                    } catch (InterruptedException e) {\n                        e.printStackTrace();\n                    }\n                }\n            }\n        }).start();\n        return super.onStartCommand(intent, flags, startId);\n    }\n\n    @Nullable\n    @Override\n    public IBinder onBind(Intent intent) {\n        return null;\n    }\n}\n')),(0,r.kt)("p",null,"Pada class di atas kita membuat Thread di dalam service yang akan di eksekusi setiap interval 2 detik. Selanjutnya daftarkan class Service tersebut ke dalam ",(0,r.kt)("inlineCode",{parentName:"p"},"AndroidManifest.xml"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},'<service android:name=".MyBackgroundService"></service>\n')),(0,r.kt)("p",null,"Kode lengkap ",(0,r.kt)("inlineCode",{parentName:"p"},"AndroidManifest.xml"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml",metastring:"title=AndroidManifest.xml",title:"AndroidManifest.xml"},'<?xml version="1.0" encoding="utf-8"?>\n<manifest xmlns:android="http://schemas.android.com/apk/res/android"\n    xmlns:tools="http://schemas.android.com/tools"\n    package="com.topekox.demoservice">\n\n    <application\n        android:allowBackup="true"\n        android:dataExtractionRules="@xml/data_extraction_rules"\n        android:fullBackupContent="@xml/backup_rules"\n        android:icon="@mipmap/ic_launcher"\n        android:label="@string/app_name"\n        android:roundIcon="@mipmap/ic_launcher_round"\n        android:supportsRtl="true"\n        android:theme="@style/Theme.DemoService"\n        tools:targetApi="31">\n        <activity\n            android:name=".MainActivity"\n            android:exported="true">\n            <intent-filter>\n                <action android:name="android.intent.action.MAIN" />\n\n                <category android:name="android.intent.category.LAUNCHER" />\n            </intent-filter>\n        </activity>\n        \x3c!-- Menambahkan Service --\x3e\n        <service android:name=".MyBackgroundService"></service>\n    </application>\n\n</manifest>\n')),(0,r.kt)("p",null,"Panggil Service dari class Activity, contoh dipanggil dari class ",(0,r.kt)("inlineCode",{parentName:"p"},"MainActivity"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"Intent intentService = new Intent(this, MyBackgroundService.class);\nstartService(intentService);\n")),(0,r.kt)("p",null,"Gambar log ketika aplikasi dijalankan."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"log",src:a(4372).Z,width:"1055",height:"305"})),(0,r.kt)("p",null,"Service akan berhenti ketika aplikasi dimatikan."),(0,r.kt)("h2",{id:"foreground-service"},"Foreground Service"),(0,r.kt)("p",null,"Berbeda dengan Background Service, Foreground Service akan tetap berjalan meski aplikasi dimatikan."),(0,r.kt)("p",null,"Cara membuatnya hampir sama dengan cara sebelumnya hanya pada bagian class ",(0,r.kt)("inlineCode",{parentName:"p"},"MainActivity")," yang berbeda."),(0,r.kt)("p",null,"Buat class extends ",(0,r.kt)("inlineCode",{parentName:"p"},"Service")," disini saya beri nama ",(0,r.kt)("inlineCode",{parentName:"p"},"MyForegroundService.java")," dan override method ",(0,r.kt)("inlineCode",{parentName:"p"},"onStartCommand"),", dan buat ",(0,r.kt)("inlineCode",{parentName:"p"},"Thread")," baru di dalam method tersebut."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java",metastring:"title=MyForegroundService.java",title:"MyForegroundService.java"},'package com.topekox.demoservice;\n\nimport android.app.Notification;\nimport android.app.NotificationChannel;\nimport android.app.NotificationManager;\nimport android.app.Service;\nimport android.content.Intent;\nimport android.os.Build;\nimport android.os.IBinder;\nimport android.util.Log;\n\nimport androidx.annotation.Nullable;\nimport androidx.annotation.RequiresApi;\n\npublic class MyForegroundService extends Service {\n\n    @RequiresApi(api = Build.VERSION_CODES.O)\n    @Override\n    public int onStartCommand(Intent intent, int flags, int startId) {\n        new Thread(new Runnable() {\n            @Override\n            public void run() {\n                while (true) {\n                    Log.e("SERVICE", "Service is running...");\n                    try {\n                        Thread.sleep(2000);\n                    } catch (InterruptedException e) {\n                        e.printStackTrace();\n                    }\n                }\n            }\n        }).start();\n\n        return super.onStartCommand(intent, flags, startId);\n    }\n\n    @Nullable\n    @Override\n    public IBinder onBind(Intent intent) {\n        return null;\n    }\n}\n')),(0,r.kt)("p",null,"Daftar service dan permission ",(0,r.kt)("inlineCode",{parentName:"p"},"FOREGROUND_SERVICE")," ke ",(0,r.kt)("inlineCode",{parentName:"p"},"AndroidManifest.xml"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml",metastring:"title=AndroidManifest.xml",title:"AndroidManifest.xml"},'<?xml version="1.0" encoding="utf-8"?>\n<manifest xmlns:android="http://schemas.android.com/apk/res/android"\n    xmlns:tools="http://schemas.android.com/tools"\n    package="com.topekox.demoservice">\n    \x3c!-- add permission --\x3e\n    <uses-permission android:name="android.permission.FOREGROUND_SERVICE"></uses-permission>\n\n    <application\n        ...\n        <activity\n           ...\n        </activity>\n        \x3c!-- register service --\x3e\n        <service android:name=".MyForegroundService"></service>\n        ...\n    </application>\n\n</manifest>\n')),(0,r.kt)("p",null,"Panggil service di ",(0,r.kt)("inlineCode",{parentName:"p"},"MainActivity"),", cuma disini sedikit berbeda karena di versi Android yang saya jalankan, saya harus memanggil annotation ",(0,r.kt)("inlineCode",{parentName:"p"},"@RequiresApi(api = Build.VERSION_CODES.O)")," untuk masalah kompatibelitas, kurang lebih method ",(0,r.kt)("inlineCode",{parentName:"p"},"onCreate")," seperti di bawah ini:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"@RequiresApi(api = Build.VERSION_CODES.O)\n@Override\nprotected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.activity_main);\n\n    Intent intentService = new Intent(this, MyForegroundService.class);\n    \n    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O && intentService == null) {\n        startForegroundService(intentService);\n    } else {\n        MainActivity.this.startService(intentService);\n    }        \n}\n")),(0,r.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Baca dokumentasi lengkap Foreground Service ",(0,r.kt)("a",{parentName:"p",href:"https://developer.android.com/guide/components/foreground-services"},"di sini"),"."))),(0,r.kt)("h3",{id:"menambahkan-notifikasi"},"Menambahkan Notifikasi"),(0,r.kt)("p",null,"Untuk menambahkan notifikasi ",(0,r.kt)("inlineCode",{parentName:"p"},"NotificationChannel")," pada method ",(0,r.kt)("inlineCode",{parentName:"p"},"onStartCommand")," di class ForegroundService:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java",metastring:"title=MyForegroundService.java",title:"MyForegroundService.java"},'@RequiresApi(api = Build.VERSION_CODES.O)\n@Override\npublic int onStartCommand(Intent intent, int flags, int startId) {\n    new Thread(new Runnable() {\n        @Override\n        public void run() {\n            while (true) {\n                Log.e("SERVICE", "Service is running...");\n                try {\n                    Thread.sleep(2000);\n                } catch (InterruptedException e) {\n                    e.printStackTrace();\n                }\n            }\n        }\n    }).start();\n\n    final String CHANNEL_ID = "Foreground Channel ID";\n    NotificationChannel channel = new NotificationChannel(\n            CHANNEL_ID,\n            CHANNEL_ID,\n            NotificationManager.IMPORTANCE_LOW);\n\n    getSystemService(NotificationManager.class).createNotificationChannel(channel);\n    Notification.Builder notification = new Notification.Builder(this, CHANNEL_ID)\n            .setContentText("Service is running")\n            .setContentTitle("Service Enabled")\n            .setSmallIcon(R.drawable.ic_launcher_background);\n\n    startForeground(1001, notification.build());\n\n    return super.onStartCommand(intent, flags, startId);\n}\n')),(0,r.kt)("p",null,"Kita juga memberikan kondisi agar service hidup jika sebelumnya tidak hidup, tambahkan kondisi di class ",(0,r.kt)("inlineCode",{parentName:"p"},"MainActivity"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java",metastring:"title=MainActivity.java",title:"MainActivity.java"},"@RequiresApi(api = Build.VERSION_CODES.O)\n@Override\nprotected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.activity_main);\n\n    if (!foregroundServiceIsRunning()) {\n        Intent intentService = new Intent(this, MyForegroundService.class);\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O && intentService == null) {\n            startForegroundService(intentService);\n        } else {\n            MainActivity.this.startService(intentService);\n        }\n    }\n}\n\nprivate boolean foregroundServiceIsRunning() {\n    ActivityManager activityManager =\n            (ActivityManager) getSystemService(MainActivity.this.ACTIVITY_SERVICE);\n\n    for (ActivityManager.RunningServiceInfo service :\n            activityManager.getRunningServices(Integer.MAX_VALUE)) {\n        if (MyForegroundService.class.getName().equals(service.service.getClassName())) {\n            return true;\n        }\n    }\n    return false;\n}\n")),(0,r.kt)("p",null,"Gambar Notifikasi:"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"notifikasi",src:a(4573).Z,width:"343",height:"345"})),(0,r.kt)("h3",{id:"service-always-on"},"Service Always ON"),(0,r.kt)("p",null,"Agar foreground service tetap berjalan walaupun Android telah direstart, buat sebuah class ",(0,r.kt)("inlineCode",{parentName:"p"},"BroadcastReceiver")," untuk mengandle ini:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java",metastring:"title=MyBroadcastReceiver.java",title:"MyBroadcastReceiver.java"},"package com.topekox.demoservice;\n\nimport android.content.BroadcastReceiver;\nimport android.content.Context;\nimport android.content.Intent;\nimport android.os.Build;\n\nimport androidx.annotation.RequiresApi;\n\npublic class MyBroadcastReceiver extends BroadcastReceiver {\n\n    @RequiresApi(api = Build.VERSION_CODES.O)\n    @Override\n    public void onReceive(Context context, Intent intent) {\n        if (intent.getAction().equals(Intent.ACTION_BOOT_COMPLETED)) {\n            Intent intentService = new Intent(context, MyForegroundService.class);\n            context.startForegroundService(intentService);\n        }\n    }\n}\n")),(0,r.kt)("p",null,"Lalu tambahkan permission dan register intentnya di ",(0,r.kt)("inlineCode",{parentName:"p"},"AndroidManifest.xml"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},'...\n<uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED"></uses-permission>\n...\n \x3c!-- register receiver --\x3e\n    <receiver android:name=".MyBroadcastReceiver"\n        android:exported="true">\n        <intent-filter>\n            <action android:name="android.intent.action.BOOT_COMPLETED"></action>\n        </intent-filter>\n    </receiver>\n...\n')),(0,r.kt)("p",null,"Maka service akan tetap berjalan walau Android telah direstart."),(0,r.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},(0,r.kt)("a",{parentName:"p",href:"https://github.com/TopekoX/sample-android-java/tree/main/DemoServiceBackgroundForeground"},"Full Source Code"),"."))))}m.isMDXComponent=!0},4372:function(e,n,a){n.Z=a.p+"assets/images/1-1e73d2318d92dc4562bb23da7be17d93.png"},4573:function(e,n,a){n.Z=a.p+"assets/images/2-e50d1eb0865739aeeea9c9d4a306827d.png"}}]);