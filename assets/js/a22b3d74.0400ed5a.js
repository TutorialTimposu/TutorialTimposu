"use strict";(self.webpackChunktimposu=self.webpackChunktimposu||[]).push([[1054],{8082:(a,e,t)=>{t.r(e),t.d(e,{assets:()=>d,contentTitle:()=>l,default:()=>u,frontMatter:()=>s,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"java-generic/generic-wildcard","title":"Java Generic Wildcard","description":"Java generic wildcard digunakan dalam kondisi dimana kita tidak peduli generic parameter type pada object yang digunakan. Misalnya kita ingin melakukan getter tanpa peduli type parameter yang digunakan.","source":"@site/tutorial/java/java-generic/07-generic-wildcard.md","sourceDirName":"java-generic","slug":"/java-generic/generic-wildcard","permalink":"/java/java-generic/generic-wildcard","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":10,"frontMatter":{"sidebar_position":10,"title":"Java Generic Wildcard"},"sidebar":"tutorialSidebar","previous":{"title":"Java Generic Contravariant","permalink":"/java/java-generic/generic-contravariant"},"next":{"title":"Java Generic Bounded Type","permalink":"/java/java-generic/generic-bounded-type"}}');var i=t(4848),r=t(8453);const s={sidebar_position:10,title:"Java Generic Wildcard"},l=void 0,d={},c=[];function o(a){const e={code:"code",em:"em",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...a.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(e.p,{children:["Java generic ",(0,i.jsx)(e.em,{children:"wildcard"})," digunakan dalam kondisi dimana kita tidak peduli generic parameter type pada object yang digunakan. Misalnya kita ingin melakukan getter tanpa peduli type parameter yang digunakan."]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Wilcard dapat digunakan dengan key ",(0,i.jsx)(e.code,{children:"?"})," ."]}),"\n",(0,i.jsx)(e.li,{children:"Wildcard tidak dapat melakukan setter karena dapat mengacaukan alur program."}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:"void getData(MyClass<?> data) {\n\t\t\n}\n"})}),"\n",(0,i.jsx)(e.p,{children:"Contoh:"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'public class DemoWildcard {\n\t\n\tstatic class MyClass<T> {\n\n\t\tprivate T value;\n\n\t\tpublic MyClass(T value) {\n\t\t\tthis.value = value;\n\t\t}\n\n\t\tpublic T getValue() {\n\t\t\treturn value;\n\t\t}\n\n\t\tpublic void setValue(T value) {\n\t\t\tthis.value = value;\n\t\t}\n\t}\n\t\n\t// mendefiniskan method generic wildcard\n\tstatic void getData(MyClass<?> data) {\n\t\tSystem.out.println(data.getValue());\n\t\t\n//\t\tdata.setValue(new MyClass<String>("Hello")); // ERROR: Wilcard tidak dapat melakukan setter\n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\tMyClass<String> str = new MyClass<String>("Ucup");\n\t\tMyClass<Integer> intr = new MyClass<Integer>(2025);\n\t\t\n\t\tgetData(str);\n\t\tgetData(intr);\n\t}\n}\n'})})]})}function u(a={}){const{wrapper:e}={...(0,r.R)(),...a.components};return e?(0,i.jsx)(e,{...a,children:(0,i.jsx)(o,{...a})}):o(a)}},8453:(a,e,t)=>{t.d(e,{R:()=>s,x:()=>l});var n=t(6540);const i={},r=n.createContext(i);function s(a){const e=n.useContext(r);return n.useMemo((function(){return"function"==typeof a?a(e):{...e,...a}}),[e,a])}function l(a){let e;return e=a.disableParentContext?"function"==typeof a.components?a.components(i):a.components||i:s(a.components),n.createElement(r.Provider,{value:e},a.children)}}}]);