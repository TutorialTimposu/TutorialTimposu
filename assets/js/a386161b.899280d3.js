"use strict";(self.webpackChunktimposu=self.webpackChunktimposu||[]).push([[8609],{3238:(a,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>c,default:()=>d,frontMatter:()=>s,metadata:()=>e,toc:()=>o});const e=JSON.parse('{"id":"java-generic/generic-invariant","title":"Java Generic Invariant","description":"Secara default sifat generic adalah invariant , yang artinya tidak boleh di subtitusi dengan subtype(class child) atau supertype(class parent) , misalnya saat kita membuat object MyClass, maka tidak sama dengan MyClass, walaupun String adalah turunan dari Object , dan begitupun sebaliknya.","source":"@site/tutorial/java/java-generic/04-generic-invariant.md","sourceDirName":"java-generic","slug":"/java-generic/generic-invariant","permalink":"/java/java-generic/generic-invariant","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":7,"frontMatter":{"sidebar_position":7,"title":"Java Generic Invariant"},"sidebar":"tutorialSidebar","previous":{"title":"Java Generic Method","permalink":"/java/java-generic/generic-method"},"next":{"title":"Java Generic Covariant","permalink":"/java/java-generic/generic-covariant"}}');var r=n(4848),i=n(8453);const s={sidebar_position:7,title:"Java Generic Invariant"},c=void 0,l={},o=[];function u(a){const t={code:"code",em:"em",p:"p",pre:"pre",...(0,i.R)(),...a.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(t.p,{children:["Secara default sifat generic adalah ",(0,r.jsx)(t.em,{children:"invariant"})," , yang artinya tidak boleh di subtitusi dengan subtype(class child) atau supertype(class parent) , misalnya saat kita membuat object ",(0,r.jsx)(t.code,{children:"MyClass<String>"}),", maka tidak sama dengan ",(0,r.jsx)(t.code,{children:"MyClass<Object>"}),", walaupun ",(0,r.jsx)(t.em,{children:"String"})," adalah turunan dari ",(0,r.jsx)(t.em,{children:"Object"})," , dan begitupun sebaliknya."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-java",children:"void doInvariant(MyClass<Object> data) {\r\n\r\n}\n"})}),"\n",(0,r.jsx)(t.p,{children:"Contoh:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-java",children:'public class DemoInvariant {\r\n\t\r\n\tstatic class MyClass<T> {\r\n\t\t\r\n\t\tprivate T value;\r\n\t\t\r\n\t\tpublic MyClass(T value) {\r\n\t\t\tthis.value = value;\r\n\t\t}\r\n\t\t\r\n\t\tpublic T getValue() {\r\n\t\t\treturn value;\r\n\t\t}\r\n\t\t\r\n\t\tpublic void setValue(T value) {\r\n\t\t\tthis.value = value;\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\tpublic static void doInvariant(MyClass<Object> data) {\r\n\t\tSystem.out.println(data.getValue());\r\n\t}\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\tMyClass<String> strData = new MyClass<>("Halo semua...");\r\n//\t\tdoInvariant(strData); // ERROR\r\n\t\tSystem.out.println(strData.getValue());\r\n\t\t\r\n\t\tMyClass<Object> objData = new MyClass<>(3000);\r\n//\t\tMyClass<Integer> intData = objData; // ERROR\r\n\t\tdoInvariant(objData);\r\n\t}\r\n\t\r\n}\n'})}),"\n",(0,r.jsx)(t.p,{children:"Output:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"Halo semua...\r\n3000\n"})}),"\n",(0,r.jsx)(t.p,{children:"Jadi dari program diatas, tidak ada hubungan Polimorfisme  dan Inheritance di Generic Java."})]})}function d(a={}){const{wrapper:t}={...(0,i.R)(),...a.components};return t?(0,r.jsx)(t,{...a,children:(0,r.jsx)(u,{...a})}):u(a)}},8453:(a,t,n)=>{n.d(t,{R:()=>s,x:()=>c});var e=n(6540);const r={},i=e.createContext(r);function s(a){const t=e.useContext(i);return e.useMemo((function(){return"function"==typeof a?a(t):{...t,...a}}),[t,a])}function c(a){let t;return t=a.disableParentContext?"function"==typeof a.components?a.components(r):a.components||r:s(a.components),e.createElement(i.Provider,{value:t},a.children)}}}]);