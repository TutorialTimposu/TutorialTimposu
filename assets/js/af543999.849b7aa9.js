"use strict";(self.webpackChunktimposu=self.webpackChunktimposu||[]).push([[6139],{6518:(a,n,e)=>{e.r(n),e.d(n,{assets:()=>r,contentTitle:()=>s,default:()=>g,frontMatter:()=>l,metadata:()=>t,toc:()=>u});var t=e(3719),i=e(4848),o=e(8453);const l={slug:"java-optional",title:"Tips menangani NullPointerException dengan Java Optional",authors:"topekox",tags:["java","java 8"]},s=void 0,r={authorsImageUrls:[void 0]},u=[];function p(a){const n={code:"code",p:"p",...(0,o.R)(),...a.components};return(0,i.jsxs)(n.p,{children:["Bagi programmer Java sudah wajib hukumnya untuk selalu bertemu dengan ",(0,i.jsx)(n.code,{children:"NullPointerException"}),", dan ini sebenarnya membuat crash program kita, dan yang jelas kita harus sedikit garuk kepala untuk menangani exception ini. Cara yang paling populer adalah diakali dengan statement kondisi ",(0,i.jsx)(n.code,{children:"if else"}),". Untuk menangani ini, Java versi 8 mengenalkan fitur baru yaitu class baru bernama ",(0,i.jsx)(n.code,{children:"Optional"})," yang berada pada package ",(0,i.jsx)(n.code,{children:"java.util"}),". Class ini sangat membantu sekali untuk menangani ",(0,i.jsx)(n.code,{children:"null"})," tanpa harus dicek terlebih dahulu dengan statement kondisi ",(0,i.jsx)(n.code,{children:"if else"}),"."]})}function g(a={}){const{wrapper:n}={...(0,o.R)(),...a.components};return n?(0,i.jsx)(n,{...a,children:(0,i.jsx)(p,{...a})}):p(a)}},8453:(a,n,e)=>{e.d(n,{R:()=>l,x:()=>s});var t=e(6540);const i={},o=t.createContext(i);function l(a){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof a?a(n):{...n,...a}}),[n,a])}function s(a){let n;return n=a.disableParentContext?"function"==typeof a.components?a.components(i):a.components||i:l(a.components),t.createElement(o.Provider,{value:n},a.children)}},3719:a=>{a.exports=JSON.parse('{"permalink":"/blog/java-optional","source":"@site/blog/2022-04-26-java-optional.md","title":"Tips menangani NullPointerException dengan Java Optional","description":"Bagi programmer Java sudah wajib hukumnya untuk selalu bertemu dengan NullPointerException, dan ini sebenarnya membuat crash program kita, dan yang jelas kita harus sedikit garuk kepala untuk menangani exception ini. Cara yang paling populer adalah diakali dengan statement kondisi if else. Untuk menangani ini, Java versi 8 mengenalkan fitur baru yaitu class baru bernama Optional yang berada pada package java.util. Class ini sangat membantu sekali untuk menangani null tanpa harus dicek terlebih dahulu dengan statement kondisi if else.","date":"2022-04-26T00:00:00.000Z","tags":[{"inline":true,"label":"java","permalink":"/blog/tags/java"},{"inline":true,"label":"java 8","permalink":"/blog/tags/java-8"}],"readingTime":3.59,"hasTruncateMarker":true,"authors":[{"name":"Ucup TopekoX","title":"TimposuLabs creator","imageURL":"https://topekox.github.io/assets/images/avatar.jpeg","key":"topekox","page":null}],"frontMatter":{"slug":"java-optional","title":"Tips menangani NullPointerException dengan Java Optional","authors":"topekox","tags":["java","java 8"]},"unlisted":false,"prevItem":{"title":"Daftar Repository Lokal Ubuntu 22.04","permalink":"/blog/repo-lokal-ubuntu-22-04"},"nextItem":{"title":"5 Alasan menggunakan Golang untuk Aplikasi Enterpise","permalink":"/blog/alasan-menggunakan-golang-enterprise"}}')}}]);