"use strict";(self.webpackChunktimposu=self.webpackChunktimposu||[]).push([[1477],{10:function(a){a.exports=JSON.parse('{"blogPosts":[{"id":"repo-lokal-ubuntu-22-04","metadata":{"permalink":"/blog/repo-lokal-ubuntu-22-04","source":"@site/blog/2022-05-06-repo-lokal-ubuntu-22-04.md","title":"Daftar Repository Lokal Ubuntu 22.04","description":"Repository lokal merupakan solusi, agar proses download/update software Ubuntu 22.04 lebih cepat, karena menggunakan Repository Lokal Indonesia.","date":"2022-05-06T00:00:00.000Z","formattedDate":"May 6, 2022","tags":[{"label":"ubuntu","permalink":"/blog/tags/ubuntu"}],"readingTime":1.47,"truncated":true,"authors":[{"name":"Ucup TopekoX","title":"Tutorial Timposu creator","url":"https://topekox.github.io","imageURL":"https://topekox.github.io/assets/images/avatar.jpeg","key":"topekox"}],"frontMatter":{"slug":"repo-lokal-ubuntu-22-04","title":"Daftar Repository Lokal Ubuntu 22.04","authors":"topekox","tags":["ubuntu"]},"nextItem":{"title":"Tips menangani NullPointerException dengan Java Optional","permalink":"/blog/java-optional"}},"content":"Repository lokal merupakan solusi, agar proses download/update software Ubuntu 22.04 lebih cepat, karena menggunakan Repository Lokal Indonesia.\\r\\n\\r\\nBerikut ini daftar repository lokal Ubuntu 22.04 :\\r\\n\\r\\n\x3c!--truncate--\x3e\\r\\n\\r\\n## kartolo.sby.datautama.net.id\\r\\n\\r\\n```bash\\r\\ndeb http://kartolo.sby.datautama.net.id/ubuntu/ jammy main restricted universe multiverse\\r\\ndeb http://kartolo.sby.datautama.net.id/ubuntu/ jammy-updates main restricted universe multiverse\\r\\ndeb http://kartolo.sby.datautama.net.id/ubuntu/ jammy-security main restricted universe multiverse\\r\\ndeb http://kartolo.sby.datautama.net.id/ubuntu/ jammy-backports main restricted universe multiverse\\r\\ndeb http://kartolo.sby.datautama.net.id/ubuntu/ jammy-proposed main restricted universe multiverse\\r\\n```\\r\\n\\r\\n## kebo.pens.ac.id\\r\\n\\r\\n```bash\\r\\ndeb http://kebo.pens.ac.id/ubuntu/ jammy main restricted universe multiverse\\r\\ndeb http://kebo.pens.ac.id/ubuntu/ jammy-updates main restricted universe multiverse\\r\\ndeb http://kebo.pens.ac.id/ubuntu/ jammy-security main restricted universe multiverse\\r\\ndeb http://kebo.pens.ac.id/ubuntu/ jammy-backports main restricted universe multiverse\\r\\ndeb http://kebo.pens.ac.id/ubuntu/ jammy-proposed main restricted universe multiverse\\r\\n```\\r\\n\\r\\n## ftp.itb.ac.id\\r\\n\\r\\n```bash\\r\\ndeb ftp://ftp.itb.ac.id/pub/ubuntu/ jammy main restricted universe multiverse\\r\\ndeb ftp://ftp.itb.ac.id/pub/ubuntu/ jammy-updates main restricted universe multiverse\\r\\ndeb ftp://ftp.itb.ac.id/pub/ubuntu/ jammy-security main restricted universe multiverse\\r\\ndeb ftp://ftp.itb.ac.id/pub/ubuntu/ jammy-backports main restricted universe multiverse\\r\\ndeb ftp://ftp.itb.ac.id/pub/ubuntu/ jammy-proposed main restricted universe multiverse\\r\\n```\\r\\n\\r\\n## buaya.klas.or.id\\r\\n\\r\\n```bash\\r\\ndeb http://buaya.klas.or.id/ubuntu/ jammy main restricted universe multiverse\\r\\ndeb http://buaya.klas.or.id/ubuntu/ jammy-updates main restricted universe multiverse\\r\\ndeb http://buaya.klas.or.id/ubuntu/ jammy-security main restricted universe multiverse\\r\\ndeb http://buaya.klas.or.id/ubuntu/ jammy-backports main restricted universe multiverse\\r\\ndeb http://buaya.klas.or.id/ubuntu/ jammy-proposed main restricted universe multiverse\\r\\n```\\r\\n\\r\\n## mirror.poliwangi.ac.id\\r\\n\\r\\n```bash\\r\\ndeb http://mirror.poliwangi.ac.id/ubuntu/ jammy main restricted universe multiverse\\r\\ndeb http://mirror.poliwangi.ac.id/ubuntu/ jammy-updates main restricted universe multiverse\\r\\ndeb http://mirror.poliwangi.ac.id/ubuntu/ jammy-security main restricted universe multiverse\\r\\ndeb http://mirror.poliwangi.ac.id/ubuntu/ jammy-backports main restricted universe multiverse\\r\\ndeb http://mirror.poliwangi.ac.id/ubuntu/ jammy-proposed main restricted universe multiverse\\r\\n```\\r\\n\\r\\n## Cara Update\\r\\n\\r\\nSilahkan pilih salah satu repository yang diinginkan, terus masukan kedalam file `sources.list` dengan menggunakan text editor pilihan anda, disini saya menggunakan `nano`:\\r\\n\\r\\n```bash\\r\\nsudo nano /etc/apt/sources.list\\r\\n```\\r\\n\\r\\nSilahkan hapus isi source yang ada atau cukup comment saja dengan menambahkan tanda `#` di setiap awal text pada repository default ubuntu, kemudian paste list repo lokal yang dipilih di bagian bawah.\\r\\n\\r\\nSetelah selesai silahkan update dengan perintah:\\r\\n\\r\\n```bash\\r\\nsudo apt-get update\\r\\n````"},{"id":"java-optional","metadata":{"permalink":"/blog/java-optional","source":"@site/blog/2022-04-26-java-optional.md","title":"Tips menangani NullPointerException dengan Java Optional","description":"Bagi programmer Java sudah wajib hukumnya untuk selalu bertemu dengan NullPointerException, dan ini sebenarnya membuat crash program kita, dan yang jelas kita harus sedikit garuk kepala untuk menangani exception ini. Cara yang paling populer adalah diakali dengan statement kondisi if else. Untuk menangani ini, Java versi 8 mengenalkan fitur baru yaitu class baru bernama Optional yang berada pada package java.util. Class ini sangat membantu sekali untuk menangani null tanpa harus dicek terlebih dahulu dengan statement kondisi if else.","date":"2022-04-26T00:00:00.000Z","formattedDate":"April 26, 2022","tags":[{"label":"java","permalink":"/blog/tags/java"},{"label":"java 8","permalink":"/blog/tags/java-8"}],"readingTime":3.59,"truncated":true,"authors":[{"name":"Ucup TopekoX","title":"Tutorial Timposu creator","url":"https://topekox.github.io","imageURL":"https://topekox.github.io/assets/images/avatar.jpeg","key":"topekox"}],"frontMatter":{"slug":"java-optional","title":"Tips menangani NullPointerException dengan Java Optional","authors":"topekox","tags":["java","java 8"]},"prevItem":{"title":"Daftar Repository Lokal Ubuntu 22.04","permalink":"/blog/repo-lokal-ubuntu-22-04"},"nextItem":{"title":"5 Alasan menggunakan Golang untuk Aplikasi Enterpise","permalink":"/blog/alasan-menggunakan-golang-enterprise"}},"content":"Bagi programmer Java sudah wajib hukumnya untuk selalu bertemu dengan `NullPointerException`, dan ini sebenarnya membuat crash program kita, dan yang jelas kita harus sedikit garuk kepala untuk menangani exception ini. Cara yang paling populer adalah diakali dengan statement kondisi `if else`. Untuk menangani ini, Java versi 8 mengenalkan fitur baru yaitu class baru bernama `Optional` yang berada pada package `java.util`. Class ini sangat membantu sekali untuk menangani `null` tanpa harus dicek terlebih dahulu dengan statement kondisi `if else`. \\r\\n\\r\\n\x3c!--truncate--\x3e\\r\\n\\r\\nBerikut contoh program yang menghasilkan `NullPointerException` :\\r\\n\\r\\n```java\\r\\npublic class DemoOptional {\\r\\n\\r\\n    public static void main(String[] args) {\\r\\n        \\r\\n        String[] students = new String[20];\\r\\n\\t    String john = students[10].toUpperCase();\\r\\n\\r\\n        System.out.println(\\"Name : \\" + john);        \\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\nSekilas program ini tidak ada yang salah, ketika dicompile program ini tidak akan mengalami pesan error, tetapi ketika dieksekusi program ini akan menghasilkan error dikarenakan variable `john` yang dipanggil masih belum ada nilainya alias `null`.\\r\\n\\r\\nKetika program ini di jalankan/run maka akan menghasilkan exception `NullPointerException`, karena memang array students index 10 masih bernilai `null`.\\r\\n\\r\\n```bash\\r\\nException in thread \\"main\\" java.lang.NullPointerException: Cannot invoke \\"String.toUpperCase()\\" because \\"<local1>[10]\\" is null\\r\\n\\tat DemoOptional.main(DemoOptional.java:6)\\r\\n```\\r\\n\\r\\nNah untuk mengatasinya biasanya dibuatkan statement pemilihan `if` untuk menghandle exception tersebut misalnya seperti di bawah ini:\\r\\n\\r\\n```java\\r\\nString[] students = new String[20];\\r\\n\\r\\n// cek nilai apakah null\\r\\nif (students[10] == null) {\\r\\n    students[10] = \\"John Doe\\";\\r\\n}\\r\\n\\r\\nString john = students[10].toUpperCase();\\r\\n\\r\\nSystem.out.println(\\"Name : \\" + john);\\r\\n```\\r\\n\\r\\nOutput:\\r\\n\\r\\n```bash\\r\\nName : JOHN DOE\\r\\n```\\r\\n\\r\\nContoh penggunaan `if` seperti contoh di atas tidaklah salah, tetapi karena seringnya programmer Java mendapatkan permasalahan seperti contoh di atas maka Java 8 membuatkan solusi lain menggunakan class `Optional`. Contoh program di atas dapat disederhanakan menggunakan class Optional seperti contoh sebagai berikut:\\r\\n\\r\\n```java\\r\\nimport java.util.Optional;\\r\\n\\r\\npublic class DemoOptional {\\r\\n    public static void main(String[] args) {\\r\\n        String[] students = new String[20];\\r\\n\\r\\n        String john = Optional.ofNullable(students[10])\\r\\n                .orElse(\\"John Doe\\").toUpperCase();\\r\\n\\r\\n        System.out.println(\\"Name : \\" + john);\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\nOutput yang dihasilkan akan sama dengan program sebelumnya tetapi cara yang digunakan sedikit berbeda karena menggunakan class `Optional` untuk memeriksa nilai dari `student[10]` yang langsung memberikan nilai ketika bernilai Nullable.\\r\\n\\r\\nBeberapa contoh penggunaan Optional.\\r\\n\\r\\n:::info\\r\\nYang berada dalam blok komentar adalah cara manual\\r\\n:::\\r\\n\\r\\n## Check Null\\r\\n\\r\\n```java\\r\\n//        String name = customer.getName();\\r\\n//        if (name == null) {\\r\\n//            name = \\"\\";\\r\\n//        }\\r\\n    \\r\\n String name = Optional.ofNullable(customer.getName())\\r\\n                .orElse(\\"\\");\\r\\n```\\r\\n\\r\\n## if Logic\\r\\n\\r\\n```java\\r\\n//        Customer customer = repository.findById(\\"id\\");\\r\\n//        if (customer == null) {\\r\\n//            customer = repository.createNew();\\r\\n//        }\\r\\n\\r\\nString nameUpper = Optional.ofNullable(customer.getName())\\r\\n                .map(value -> value.toUpperCase())\\r\\n                .orElse(\\"\\");\\r\\n```\\r\\n\\r\\n## Operation if Not Null\\r\\n\\r\\n```java\\r\\n//                int id = 2;\\r\\n//                Person person = session.get(Person.class, id);\\r\\n//                if (person != null) {\\r\\n//                  System.out.println(\\"Deleting\\");\\r\\n//                  session.delete(person);\\r\\n//                }\\r\\n\\r\\nint id = 2;\\r\\nOptional<Person> person = Optional.ofNullable(session.get(Person.class, id));\\r\\nperson.ifPresent(value -> session.delete(value));\\r\\n```\\r\\n\\r\\n## Operation to Null Value\\r\\n\\r\\n```java\\r\\n//        String nameUpper = customer.getName();\\r\\n//        if (nameUpper != null) {\\r\\n//            nameUpper = nameUpper.toUpperCase();\\r\\n//        } else {\\r\\n//            nameUpper = \\"\\";\\r\\n//        }\\r\\n\\r\\nString nameUpper = Optional.ofNullable(customer.getName())\\r\\n                .map(value -> value.toUpperCase())\\r\\n                .orElse(\\"\\");\\r\\n```\\r\\n\\r\\n## nested If Checking\\r\\n\\r\\n```java\\r\\n//        String country = \\"Indonesia\\";\\r\\n//        if (customer.getAddress() != null) {\\r\\n//            if (customer.getAddress().getCountry() != null) {\\r\\n//                country = customer.getAddress().getCountry();\\r\\n//            }\\r\\n//        }\\r\\n\\r\\nString country = Optional.ofNullable(customer.getAddress())\\r\\n                .map(address -> address.getCountry())\\r\\n                .orElse(\\"Indonesia\\");\\r\\n\\r\\n```\\r\\n\\r\\n## Check and Throw Exception\\r\\n\\r\\n```java\\r\\n//        String name = customer.getName();\\r\\n//        if (name == null) {\\r\\n//            throw new IllegalArgumentException(\\"Name is null\\");\\r\\n//        }\\r\\n\\r\\nString name = Optional.ofNullable(customer.getName())\\r\\n                .orElseThrow(() -> new IllegalArgumentException(\\"Name is null\\"));\\r\\n```\\r\\n\\r\\n## if Check Do Something\\r\\n\\r\\n```java\\r\\n//        if (customer.getAddress() != null) {\\r\\n//            if (customer.getAddress().getCountry() != null) {\\r\\n//                System.out.println(customer.getAddress().getCountry());\\r\\n//            }\\r\\n//        }\\r\\n\\r\\nOptional.ofNullable(customer.getAddress())\\r\\n                .map(address -> address.getCountry())\\r\\n                .ifPresent(country -> System.out.println(country));\\r\\n\\r\\n```\\r\\n\\r\\n## neested Object\\r\\n\\r\\n```java\\r\\n//        Long cashBalance = 0L;\\r\\n//        if (customer.getWallet() != null) {\\r\\n//            if (customer.getWallet().getBalance() != null) {\\r\\n//                cashBalance = customer.getWallet().getBalance().getCashBalance();\\r\\n//            }\\r\\n//        }\\r\\n\\r\\nLong cashBalance = Optional.ofNullable(customer.getWallet())\\r\\n                .map(wallet -> wallet.getBalance())\\r\\n                .map(balance -> balance.getCashBalance())\\r\\n                .orElse(0L);\\r\\n```\\r\\n\\r\\n## Filter\\r\\n\\r\\n```java\\r\\n//        Long bonus = 0L;\\r\\n//        if (CustomerType.PLATINUM.equals(customer.getType())) {\\r\\n//            if (customer.getWallet() != null) {\\r\\n//                if (customer.getWallet().getBalance() != null) {\\r\\n//                    bonus = customer.getWallet().getBalance().getCashBalance() * 10 / 100;\\r\\n//                }\\r\\n//            }\\r\\n//        }\\r\\n\\r\\nLong bonus = Optional.ofNullable(customer)\\r\\n                .filter(value -> CustomerType.PLATINUM.equals(customer.getType()))\\r\\n                .map(value -> value.getWallet())\\r\\n                .map(wallet -> wallet.getBalance())\\r\\n                .map(balance -> balance.getCashBalance())\\r\\n                .map(cashBalance -> cashBalance * 10 / 100)\\r\\n                .orElse(0L);\\r\\n```\\r\\n\\r\\n:::info\\r\\nDownload [Source Code](https://github.com/TopekoX/java-optional-demo)\\r\\n:::\\r\\n\\r\\n**Referensi** :\\r\\n* [https://docs.oracle.com/javase/8/docs/api/java/util/Optional.html](https://docs.oracle.com/javase/8/docs/api/java/util/Optional.html)\\r\\n* [https://www.youtube.com/watch?v=mucDS5Db9go](https://www.youtube.com/watch?v=mucDS5Db9go)"},{"id":"alasan-menggunakan-golang-enterprise","metadata":{"permalink":"/blog/alasan-menggunakan-golang-enterprise","source":"@site/blog/2022-04-09-alasan-menggunakan-go.md","title":"5 Alasan menggunakan Golang untuk Aplikasi Enterpise","description":"Saat ini kita memiliki banyak pilihan bahasa pemrograman untuk membangun aplikasi berskala besar atau enterpise untuk skala perusahaan . Salah satu bahasa pemrograman yang mendapatkan daya tarik yang signifikan dalam beberapa tahun terakhir adalah Go atau Golang. Bahasa ini menawarkan banyak manfaat bagi bisnis dan pengembang aplikasi.","date":"2022-04-09T00:00:00.000Z","formattedDate":"April 9, 2022","tags":[{"label":"golang","permalink":"/blog/tags/golang"},{"label":"enterprise","permalink":"/blog/tags/enterprise"}],"readingTime":2.29,"truncated":true,"authors":[{"name":"Ucup TopekoX","title":"Tutorial Timposu creator","url":"https://topekox.github.io","imageURL":"https://topekox.github.io/assets/images/avatar.jpeg","key":"topekox"}],"frontMatter":{"slug":"alasan-menggunakan-golang-enterprise","title":"5 Alasan menggunakan Golang untuk Aplikasi Enterpise","authors":"topekox","tags":["golang","enterprise"]},"prevItem":{"title":"Tips menangani NullPointerException dengan Java Optional","permalink":"/blog/java-optional"},"nextItem":{"title":"Welcome","permalink":"/blog/welcome"}},"content":"Saat ini kita memiliki banyak pilihan bahasa pemrograman untuk membangun aplikasi berskala besar atau enterpise untuk skala perusahaan . Salah satu bahasa pemrograman yang mendapatkan daya tarik yang signifikan dalam beberapa tahun terakhir adalah Go atau Golang. Bahasa ini menawarkan banyak manfaat bagi bisnis dan pengembang aplikasi.\\r\\n\\r\\n\x3c!--truncate--\x3e\\r\\n\\r\\n![Golang](/img/golang/golang-logo.png \\"Golang\\")\\r\\n\\r\\nPertanyaan pertama yang muncul ketika perusahaan/startup mulai membangun aplikasi adalah Bahasa pemrograman mana yang harus dipilih?. Pilihannya pun saat ada banyak sekali seperti PHP, C#, Java, Python, JavaScript dll, dengan kelebihan dan kekurangannya sendiri. Bahasa Pemrograman Golang atau Go hadir dengan fitur yang bisa dibilang untuk menambal kekurangan pada bahasa pemrograman yang telah ada.\\r\\n\\r\\n## Mengapa Menggunakan Golang?\\r\\n\\r\\nGo atau Golang adalah bahasa pemrograman open-source yang dirancang oleh Google. Penghargaan untuk pengembangannya diberikan kepada Rob Pike, Robert Griesemer, dan Ken Thompson. Bahasa ini dirancang untuk meningkatkan kecepatan pemrograman dan mengemas yang terbaik dari banyak bahasa populer seperti pengetikan statis C++, dan Kegunaan dan Keterbacaan JavaScript. Secara sintaksis mirip dengan bahasa C tetapi dengan pengetikan struktural, pengumpulan sampah, dan keamanan memori.\\r\\n\\r\\nGolang banyak digunakan di beberapa perusahaan besar seperti Google, IBM, BBC, Apple dan Twitter dll. Melihat keberhasilan bahasa pemrograman tersebut, banyak perusahaan kecil dan menengah dan perusahaan rintisan/startup juga mulai menggunakan Go untuk pengembangan aplikasi.\\r\\n\\r\\n## Keuntungan menggunakan Golang?\\r\\n\\r\\nGolang menawarkan banyak manfaat untuk skala enterprise seperti:\\r\\n\\r\\n1. **Fleksibilitas**: Golang dapat digunakan untuk mengembangkan berbagai aplikasi mulai dari aplikasi sederhana hingga aplikasi yang kompleks pada perusahaan. Tidak hanya mampu memenuhi kebutuhan perusahaan teknologi tetapi juga industri lain seperti keuangan, media dll.\\r\\n2. **Dukungan Lintas Platform**: Perusahaan dapat menggunakan bahasa pemrograman Golang untuk membangun aplikasi lintas platform. Bahasa ini mendukung berbagai platform termasuk Windows, Linux, dan platform seluler.\\r\\n3. **Pengembangan Lebih Cepat**: Perusahaan lebih menyukai bahasa pemrograman yang membantu mereka membangun aplikasi lebih cepat. Golang dapat dikembangkan dengan cepat. Tidak ada Mesin Virtual di lingkungan Go dan kodenya langsung dikompilasi ke kode mesin, ini membuat kompilasi lebih cepat. Dengan kompiler yang memproduksi, hanya satu file yang dapat dieksekusi dan dapat diunggah dari mana saja, eksekusi kode juga menjadi cepat.\\r\\n4. **Skalabilitas**: Pertimbangan utama lainnya untuk tim pengembangan aplikasi perusahaan saat memilih bahasa pemrograman. Golang mendukung skalabilitas. Ini menggunakan fungsi dasar yang disebut *Goroutines* yang dapat berjalan secara independen dan simultan dan mandiri untuk memungkinkan penanganan banyak tugas sekaligus.\\r\\n5. **Kinerja Aplikasi**: Faktor penentu keberhasilan suatu aplikasi adalah kinerjanya. Golang menawarkan kinerja luar biasa dan pengalaman aplikasi yang menyenangkan. Membutuhkan lebih sedikit sumber daya sistem dan berjalan dengan baik pada perangkat yang lebih lama. Karena mengkonsumsi lebih sedikit RAM, aplikasi ini juga stabil dengan lebih sedikit kemungkinan aplikasi utuk crash.\\r\\n\\r\\nSelain 5 alasan di atas mengapa perusahaan harus memilih Golang, alasan lainnya adalah ketersediaan programmer Golang. Bahasanya mudah dipelajari, jadi pengembang aplikasi Anda dapat dengan cepat membangun aplikasi Golang dalamnya."},{"id":"welcome","metadata":{"permalink":"/blog/welcome","source":"@site/blog/2022-03-20-welcome/index.md","title":"Welcome","description":"Selamat Datang di Tutorial Timposu. Website ini dibuat dengan tujuan untuk membagikan tutorial bahasa pemrograman maupun ilmu komputer seputarnya. Website ini dibuat dan di-maintenance oleh Ucup Topekox. Sedangkan latar belakang pembuatan website justru untuk dokumentasi, kenapa dokumentasi?.","date":"2022-03-20T00:00:00.000Z","formattedDate":"March 20, 2022","tags":[{"label":"blog","permalink":"/blog/tags/blog"}],"readingTime":0.865,"truncated":true,"authors":[{"name":"Ucup TopekoX","title":"Tutorial Timposu creator","url":"https://topekox.github.io","imageURL":"https://topekox.github.io/assets/images/avatar.jpeg","key":"topekox"}],"frontMatter":{"slug":"welcome","title":"Welcome","authors":["topekox"],"tags":["blog"]},"prevItem":{"title":"5 Alasan menggunakan Golang untuk Aplikasi Enterpise","permalink":"/blog/alasan-menggunakan-golang-enterprise"}},"content":"Selamat Datang di Tutorial Timposu. Website ini dibuat dengan tujuan untuk membagikan tutorial bahasa pemrograman maupun ilmu komputer seputarnya. Website ini dibuat dan di-maintenance oleh [Ucup Topekox](https://topekox.github.io/). Sedangkan latar belakang pembuatan website justru untuk dokumentasi, kenapa dokumentasi?. \\r\\n\\r\\n\x3c!--truncate--\x3e\\r\\n\\r\\nIya benar dokumentasi karena sebenarnya saya dan mungkin hampir semua manusia memiliki sifat pelupa, oleh karena itu saya berinisiatif untuk mendokumentasikan apa yang saya telah pelajari dan ketahui. Selain itu disela-sela waktu saya juga sering mengajar, dan karena biasanya ada saja siswa yang meminta materi langsung saja saya arahkan ke website ini.\\r\\n\\r\\nPenyusunan tutorial pada website ini sedemikianrupa dibuat dengan jalur roadmap yang jelas sehingga teman-teman dapat belajar dengan lebih terarah. Selain itu pada website ini juga terdapat artikel blog yang berisi informasi seputar dunia pemrograman dan lainnya. Apabila ada pertanyaan seputar website ini silahkan hubungi saya di ucuptopekox@gmail.com ataupun di media sosial saya.\\r\\n\\r\\nAkhir kata semoga website ini dapat berguna bagi teman-teman semua, dan apabila ingin mensupport website ini, sudi kiranya teman-teman membagikan/memberitahukan website kepada siapapun yang membutuhkan, agar ilmunya tidak berhenti anda saja."}]}')}}]);