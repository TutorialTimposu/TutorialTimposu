"use strict";(self.webpackChunktimposu=self.webpackChunktimposu||[]).push([[2582],{2317:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>d,default:()=>u,frontMatter:()=>l,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"java-collection/default-method","title":"Default Method","description":"Di Java 8 ada fitur bernama Default Method, dimana kita bisa menambahkan konkrit method di interface. Fitur ini banyak sekali digunakan di Java Collection, karena kita tahu semua collection di Java memiliki kontrak interface, sehingga dengan mudah di Java bisa meng-improve kemampuan semua collection hanya dengan menambahkan default method di interface collection-nya.","source":"@site/tutorial/java/java-collection/22-default-method.md","sourceDirName":"java-collection","slug":"/java-collection/default-method","permalink":"/java/java-collection/default-method","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":22,"frontMatter":{"sidebar_position":22,"title":"Default Method"},"sidebar":"tutorialSidebar","previous":{"title":"Abstract Class Collections","permalink":"/java/java-collection/abstract-class-collections"},"next":{"title":"Spliterator Interface","permalink":"/java/java-collection/spliterator-interface"}}');var r=n(4848),i=n(8453);const l={sidebar_position:22,title:"Default Method"},d=void 0,o={},c=[{value:"Default Method di Collection",id:"default-method-di-collection",level:2},{value:"Default Method di Map",id:"default-method-di-map",level:2}];function s(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.p,{children:"Di Java 8 ada fitur bernama Default Method, dimana kita bisa menambahkan konkrit method di interface. Fitur ini banyak sekali digunakan di Java Collection, karena kita tahu semua collection di Java memiliki kontrak interface, sehingga dengan mudah di Java bisa meng-improve kemampuan semua collection hanya dengan menambahkan default method di interface collection-nya."}),"\n",(0,r.jsx)(t.h2,{id:"default-method-di-collection",children:"Default Method di Collection"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Default Method"}),(0,r.jsx)(t.th,{children:"Keterangan"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"Iterable.forEach(consumer)"})}),(0,r.jsx)(t.td,{children:"Melakukan iterasi seluruh data collection"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"List.removeIf(predicate)"})}),(0,r.jsx)(t.td,{children:"Menghapus data di collection menggunakan predicate"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"List.replaceAll(operator)"})}),(0,r.jsx)(t.td,{children:"Mengubah seluruh data di collection"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"getOrDefault(key, defaultValue)"})}),(0,r.jsxs)(t.td,{children:["Mengambil data berdasarkan key, jika tidak ada, return ",(0,r.jsx)(t.code,{children:"defaultValue"})]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"forEach(consumer)"})}),(0,r.jsx)(t.td,{children:"Melakukan iterasi seluruh data key-value"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"replaceAll(function)"})}),(0,r.jsx)(t.td,{children:"Mengubah seluruh data value"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"putIfAbsent(key, value)"})}),(0,r.jsx)(t.td,{children:"Simpan data ke map jika belum ada"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"remove(key, value)"})}),(0,r.jsx)(t.td,{children:"Hapus jika key-value nya sama"})]})]})]}),"\n",(0,r.jsx)(t.p,{children:"Contoh:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-java",children:'import java.util.ArrayList;\r\nimport java.util.List;\r\nimport java.util.function.Consumer;\r\nimport java.util.function.Predicate;\r\nimport java.util.function.UnaryOperator;\r\n\r\npublic class DemoDefaultMethod {\r\n\r\n\tpublic static void main(String[] args) {\r\n\t\tdefaultMethodCollection();\r\n\t}\r\n\r\n\tprivate static void defaultMethodCollection() {\r\n\t\tList<Integer> numbers = new ArrayList<Integer>();\r\n\r\n\t\tfor (int i = 1; i <= 100; i++) {\r\n\t\t\tnumbers.add(i);\r\n\t\t}\r\n\r\n\t\tSystem.out.println(numbers);\r\n\r\n\t\t// replaceAll default method untuk melakukan replace value dalam elemen\r\n\t\tnumbers.replaceAll(new UnaryOperator<Integer>() {\r\n\r\n\t\t\t@Override\r\n\t\t\tpublic Integer apply(Integer value) {\r\n\t\t\t\treturn value * 10;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tSystem.out.println(numbers);\r\n\r\n\t\t/** Looping forEach **/\r\n\t\t// looping dengan forEach\r\n\t\tfor (var number : numbers) {\r\n\t\t\tSystem.out.println(number);\r\n\t\t}\r\n\r\n\t\t// looping dengan forEach method consumer\r\n\t\tnumbers.forEach(new Consumer<Integer>() {\r\n\t\t\t@Override\r\n\t\t\tpublic void accept(Integer value) {\r\n\t\t\t\tSystem.out.println("nilai ke: " + value);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// looping dengan forEach method consumer dengan lambda\r\n\t\tnumbers.forEach((value) -> System.out.println("Value ke: " + value));\r\n\r\n\t\t/** Remove If **/\r\n\t\t// remove if dengan removeIf() method\r\n\t\tnumbers.removeIf(new Predicate<Integer>() {\r\n\t\t\t@Override\r\n\t\t\tpublic boolean test(Integer value) {\r\n\t\t\t\treturn value > 500;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// remove if dengan removeIf() method predicate dengan lambda\r\n\t\tnumbers.removeIf(value -> value > 500);\r\n\r\n\t\tSystem.out.println(numbers);\r\n\t}\r\n}\n'})}),"\n",(0,r.jsx)(t.h2,{id:"default-method-di-map",children:"Default Method di Map"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Default Method"}),(0,r.jsx)(t.th,{children:"Keterangan"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"replace(key, oldValue, newValue)"})}),(0,r.jsxs)(t.td,{children:["Ubah key jika value sekarang sama dengan ",(0,r.jsx)(t.code,{children:"oldValue"})]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"computeIfAbsent(key, function)"})}),(0,r.jsx)(t.td,{children:"Ubah key dengan value hasil function jika belum ada"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"computeIfPresent(key, function)"})}),(0,r.jsx)(t.td,{children:"Ubah key dengan value hasil function jika sudah ada"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"\u2026 dan masih banyak"}),(0,r.jsx)(t.td,{})]})]})]}),"\n",(0,r.jsxs)(t.p,{children:["Contoh penggunaan default method pada ",(0,r.jsx)(t.code,{children:"Map"}),":"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-java",children:'Map<String, String> countrys = new HashMap<String, String>();\r\ncountrys.put("id", "Indonesia");\r\ncountrys.put("vn", "Vietnam");\r\ncountrys.put("th", "Thailand");\r\ncountrys.put("ph", "Philippines");\r\n\r\n// menggunakan forEach default method\r\ncountrys.forEach(new BiConsumer<String, String>() {\r\n\t@Override\r\n\tpublic void accept(String k, String v) {\r\n\t\tSystem.out.println("Key: " + k + ", value: " + v);\t\t\t\t\r\n\t}\r\n});\r\n\r\n// menggunakan forEach default method dengan lambda\r\ncountrys.forEach((k, v) -> System.out.println("Key: " + k + ", value: " + v));\n'})})]})}function u(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(s,{...e})}):s(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>l,x:()=>d});var a=n(6540);const r={},i=a.createContext(r);function l(e){const t=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),a.createElement(i.Provider,{value:t},e.children)}}}]);