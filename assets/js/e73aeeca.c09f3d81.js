"use strict";(self.webpackChunktimposu=self.webpackChunktimposu||[]).push([[8201],{6796:(a,n,e)=>{e.r(n),e.d(n,{assets:()=>s,contentTitle:()=>m,default:()=>p,frontMatter:()=>i,metadata:()=>t,toc:()=>l});var t=e(6960),o=e(4848),r=e(8453);const i={slug:"java-comparator-interface",title:"Belajar Java Comparator",authors:"topekox",tags:["java","java comparator"]},m=void 0,s={authorsImageUrls:[void 0]},l=[];function c(a){const n={a:"a",code:"code",p:"p",...(0,r.R)(),...a.components};return(0,o.jsxs)(n.p,{children:["Pada postingan sebelumnya, kita bisa membandingkan class dengan mensortirnya dengan menggunakan ",(0,o.jsx)(n.a,{href:"/blog/java-comparable-interface",children:"comparable"}),". Dengan comparable kita dapat menggunakan class sendiri sebagai object comparable dengan mengimplementasi class Comparable, namun bagaimana dengan class milik orang lain yang ingin kita comparable. Dengan kasus seperti itu kita dapat menggunakan interface generic bernama Comparator. Interface Comparator akan mengimplementasikan method ",(0,o.jsx)(n.code,{children:"int compare(T o1, T o2)"})," yang nanti melakukan compare antara 2 objek, yang akan mengembalikan nilai bilangan bulat negatif, nol, dan bilangan bulat positif:"]})}function p(a={}){const{wrapper:n}={...(0,r.R)(),...a.components};return n?(0,o.jsx)(n,{...a,children:(0,o.jsx)(c,{...a})}):c(a)}},8453:(a,n,e)=>{e.d(n,{R:()=>i,x:()=>m});var t=e(6540);const o={},r=t.createContext(o);function i(a){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof a?a(n):{...n,...a}}),[n,a])}function m(a){let n;return n=a.disableParentContext?"function"==typeof a.components?a.components(o):a.components||o:i(a.components),t.createElement(r.Provider,{value:n},a.children)}},6960:a=>{a.exports=JSON.parse('{"permalink":"/blog/java-comparator-interface","source":"@site/blog/2024-10-05-java-comparator-interface.md","title":"Belajar Java Comparator","description":"Pada postingan sebelumnya, kita bisa membandingkan class dengan mensortirnya dengan menggunakan comparable. Dengan comparable kita dapat menggunakan class sendiri sebagai object comparable dengan mengimplementasi class Comparable, namun bagaimana dengan class milik orang lain yang ingin kita comparable. Dengan kasus seperti itu kita dapat menggunakan interface generic bernama Comparator. Interface Comparator akan mengimplementasikan method int compare(T o1, T o2) yang nanti melakukan compare antara 2 objek, yang akan mengembalikan nilai bilangan bulat negatif, nol, dan bilangan bulat positif:","date":"2024-10-05T00:00:00.000Z","tags":[{"inline":true,"label":"java","permalink":"/blog/tags/java"},{"inline":true,"label":"java comparator","permalink":"/blog/tags/java-comparator"}],"readingTime":3.57,"hasTruncateMarker":true,"authors":[{"name":"Ucup TopekoX","title":"TimposuLabs creator","imageURL":"https://topekox.github.io/assets/images/avatar.jpeg","key":"topekox","page":null}],"frontMatter":{"slug":"java-comparator-interface","title":"Belajar Java Comparator","authors":"topekox","tags":["java","java comparator"]},"unlisted":false,"nextItem":{"title":"Belajar Java Comparable","permalink":"/blog/java-comparable-interface"}}')}}]);