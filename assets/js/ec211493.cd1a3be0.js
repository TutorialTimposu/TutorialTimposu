"use strict";(self.webpackChunktimposu=self.webpackChunktimposu||[]).push([[8988],{3905:(e,a,n)=>{n.d(a,{Zo:()=>o,kt:()=>c});var t=n(7294);function l(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function r(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function i(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?r(Object(n),!0).forEach((function(a){l(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function s(e,a){if(null==e)return{};var n,t,l=function(e,a){if(null==e)return{};var n,t,l={},r=Object.keys(e);for(t=0;t<r.length;t++)n=r[t],a.indexOf(n)>=0||(l[n]=e[n]);return l}(e,a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)n=r[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var p=t.createContext({}),u=function(e){var a=t.useContext(p),n=a;return e&&(n="function"==typeof e?e(a):i(i({},a),e)),n},o=function(e){var a=u(e.components);return t.createElement(p.Provider,{value:a},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},k=t.forwardRef((function(e,a){var n=e.components,l=e.mdxType,r=e.originalType,p=e.parentName,o=s(e,["components","mdxType","originalType","parentName"]),d=u(n),k=l,c=d["".concat(p,".").concat(k)]||d[k]||m[k]||r;return n?t.createElement(c,i(i({ref:a},o),{},{components:n})):t.createElement(c,i({ref:a},o))}));function c(e,a){var n=arguments,l=a&&a.mdxType;if("string"==typeof e||l){var r=n.length,i=new Array(r);i[0]=k;var s={};for(var p in a)hasOwnProperty.call(a,p)&&(s[p]=a[p]);s.originalType=e,s[d]="string"==typeof e?e:l,i[1]=s;for(var u=2;u<r;u++)i[u]=n[u];return t.createElement.apply(null,i)}return t.createElement.apply(null,n)}k.displayName="MDXCreateElement"},1643:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>p,contentTitle:()=>i,default:()=>m,frontMatter:()=>r,metadata:()=>s,toc:()=>u});var t=n(7462),l=(n(7294),n(3905));const r={slug:"perintah-dasar-postgre",title:"Perintah Dasar PostgreSQL",authors:"topekox",tags:["postgre","postgresql","database","rdbms"]},i=void 0,s={permalink:"/blog/perintah-dasar-postgre",source:"@site/blog/2023-06-20-perintah-dasar-postgre.md",title:"Perintah Dasar PostgreSQL",description:"PostgreSQL adalah sistem basisdata / database yang sangat powerfull untuk urusan data yang berelasi dan bersifat open source. Sudah dikembangkan lebih dari 15 tahun dan sudah terbukti dari rancangan arsitekturnya dan telah mendapat reputasi sebagai database yang kuat, handal, integritas data dan akurasi data yang bagus.",date:"2023-06-20T00:00:00.000Z",formattedDate:"June 20, 2023",tags:[{label:"postgre",permalink:"/blog/tags/postgre"},{label:"postgresql",permalink:"/blog/tags/postgresql"},{label:"database",permalink:"/blog/tags/database"},{label:"rdbms",permalink:"/blog/tags/rdbms"}],readingTime:13.515,hasTruncateMarker:!0,authors:[{name:"Ucup TopekoX",title:"Tutorial Timposu creator",url:"https://topekox.github.io",imageURL:"https://topekox.github.io/assets/images/avatar.jpeg",key:"topekox"}],frontMatter:{slug:"perintah-dasar-postgre",title:"Perintah Dasar PostgreSQL",authors:"topekox",tags:["postgre","postgresql","database","rdbms"]},prevItem:{title:"Membuat User PostgreSQL",permalink:"/blog/membuat-user-postgresql"},nextItem:{title:"Cara Mudah Membuat Logging di Spring Boot",permalink:"/blog/spring-logging"}},p={authorsImageUrls:[void 0]},u=[{value:"Login to CLI Postgre",id:"login-to-cli-postgre",level:2},{value:"Help",id:"help",level:3},{value:"Login",id:"login",level:3},{value:"Login dengan perintah lengkap (host, port, user dan nama database)",id:"login-dengan-perintah-lengkap-host-port-user-dan-nama-database",level:3},{value:"Help Postgre CLI",id:"help-postgre-cli",level:3},{value:"Daftar Perintah lengkap",id:"daftar-perintah-lengkap",level:3},{value:"Exit Postgre CLI",id:"exit-postgre-cli",level:3},{value:"Databases",id:"databases",level:2},{value:"Melihat daftar databases",id:"melihat-daftar-databases",level:3},{value:"Membuat Database",id:"membuat-database",level:3},{value:"Menghapus Database",id:"menghapus-database",level:3},{value:"Membuat privileges",id:"membuat-privileges",level:3},{value:"Koneksi ke Database",id:"koneksi-ke-database",level:3},{value:"Table",id:"table",level:2},{value:"Membuat Table",id:"membuat-table",level:3},{value:"Melihat Daftar Table",id:"melihat-daftar-table",level:3},{value:"Melihat Properties/Detail Table",id:"melihat-propertiesdetail-table",level:3},{value:"Menghapus Table",id:"menghapus-table",level:3},{value:"Membuat Table dengan Constraint",id:"membuat-table-dengan-constraint",level:3},{value:"Update Table",id:"update-table",level:2},{value:"Insert Table",id:"insert-table",level:2},{value:"Melihat isi Table",id:"melihat-isi-table",level:3},{value:"Insert Data dari File",id:"insert-data-dari-file",level:3},{value:"SELECT",id:"select",level:2},{value:"Menampilkan Jumlah Data",id:"menampilkan-jumlah-data",level:3},{value:"Menampilkan data berdasarkan nama field",id:"menampilkan-data-berdasarkan-nama-field",level:3},{value:"Mencari data berdasarkan email",id:"mencari-data-berdasarkan-email",level:3},{value:"Sortir data",id:"sortir-data",level:3},{value:"Sortir data secara terbalik",id:"sortir-data-secara-terbalik",level:3},{value:"SELECT DISTINCT",id:"select-distinct",level:3},{value:"SELECT WHERE",id:"select-where",level:3},{value:"SELECT WHERE AND",id:"select-where-and",level:3},{value:"SELECT WHERE AND OR",id:"select-where-and-or",level:3},{value:"SELECT Comparison Operators / Operator Pembanding",id:"select-comparison-operators--operator-pembanding",level:3},{value:"LIMIT",id:"limit",level:3},{value:"OFFSET",id:"offset",level:3},{value:"FETCH",id:"fetch",level:3},{value:"OR",id:"or",level:3},{value:"IN",id:"in",level:3},{value:"BETWEEN",id:"between",level:3},{value:"LIKE",id:"like",level:3},{value:"ILIKE",id:"ilike",level:3},{value:"GROUP",id:"group",level:3},{value:"GROUP BY HAVING",id:"group-by-having",level:3},{value:"Create New Table car",id:"create-new-table-car",level:3},{value:"MAX",id:"max",level:3},{value:"MIN",id:"min",level:3},{value:"AVG",id:"avg",level:3},{value:"ROUND",id:"round",level:3},{value:"Gabungan MIN, MAX",id:"gabungan-min-max",level:3},{value:"SUM",id:"sum",level:3},{value:"Mathematical Functions and Operators",id:"mathematical-functions-and-operators",level:3},{value:"Studi Kasus Aritmatika",id:"studi-kasus-aritmatika",level:3},{value:"COALESCE",id:"coalesce",level:3},{value:"NULLIF",id:"nullif",level:3},{value:"TIMESTAMP",id:"timestamp",level:3},{value:"EXTRACT",id:"extract",level:3},{value:"AGE()",id:"age",level:3},{value:"IS NULL",id:"is-null",level:3},{value:"CONSTRAINT",id:"constraint",level:3},{value:"PRIMARY KEY",id:"primary-key",level:3},{value:"UNIQUE",id:"unique",level:3},{value:"CHECK",id:"check",level:3},{value:"DELETE",id:"delete",level:2},{value:"UPDATE",id:"update",level:2},{value:"ON CONFLICT DO NOTHING",id:"on-conflict-do-nothing",level:2},{value:"ON CONFLICT DO UPDATE",id:"on-conflict-do-update",level:2},{value:"RELATIONS",id:"relations",level:2},{value:"INNER JOIN",id:"inner-join",level:3},{value:"LEFT JOIN",id:"left-join",level:3},{value:"Hapus Record yang berelasi Foreign Key",id:"hapus-record-yang-berelasi-foreign-key",level:3},{value:"Export Query to CSV",id:"export-query-to-csv",level:2},{value:"Serial &amp; Sequence",id:"serial--sequence",level:2},{value:"Show All Extensions",id:"show-all-extensions",level:3},{value:"Install UUID Extension",id:"install-uuid-extension",level:3},{value:"UUID Example",id:"uuid-example",level:2}],o={toc:u},d="wrapper";function m(e){let{components:a,...n}=e;return(0,l.kt)(d,(0,t.Z)({},o,n,{components:a,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"PostgreSQL adalah sistem basisdata / database yang sangat powerfull untuk urusan data yang berelasi dan bersifat open source. Sudah dikembangkan lebih dari 15 tahun dan sudah terbukti dari rancangan arsitekturnya dan telah mendapat reputasi sebagai database yang kuat, handal, integritas data dan akurasi data yang bagus."),(0,l.kt)("p",null,"Buat kalian yang baru belajar PostgreSQL berikut beberapa perintah dasar PostgreSQL:"),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://images.unsplash.com/photo-1564760055775-d63b17a55c44?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=877&q=80",alt:"Topekox"})),(0,l.kt)("h2",{id:"login-to-cli-postgre"},"Login to CLI Postgre"),(0,l.kt)("h3",{id:"help"},"Help"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"$ psql --help\n")),(0,l.kt)("h3",{id:"login"},"Login"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"$ psql\n")),(0,l.kt)("h3",{id:"login-dengan-perintah-lengkap-host-port-user-dan-nama-database"},"Login dengan perintah lengkap (host, port, user dan nama database)"),(0,l.kt)("p",null,"Contoh misalkan kita ingin login ke server Postgre yang memiliki data host ",(0,l.kt)("inlineCode",{parentName:"p"},"localhost"),", port default ",(0,l.kt)("inlineCode",{parentName:"p"},"5432"),", user ",(0,l.kt)("inlineCode",{parentName:"p"},"ucup")," dan nama database ",(0,l.kt)("inlineCode",{parentName:"p"},"belajar")," :"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"$ psql -h localhost -p 5432 -U ucup belajar\n")),(0,l.kt)("h3",{id:"help-postgre-cli"},"Help Postgre CLI"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"$ help\n")),(0,l.kt)("h3",{id:"daftar-perintah-lengkap"},"Daftar Perintah lengkap"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"\\?\n")),(0,l.kt)("h3",{id:"exit-postgre-cli"},"Exit Postgre CLI"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"\\q\n")),(0,l.kt)("h2",{id:"databases"},"Databases"),(0,l.kt)("h3",{id:"melihat-daftar-databases"},"Melihat daftar databases"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"\\l\n")),(0,l.kt)("h3",{id:"membuat-database"},"Membuat Database"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE DATABASE belajar;\n")),(0,l.kt)("h3",{id:"menghapus-database"},"Menghapus Database"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"DROP DATABASE belajar;\n")),(0,l.kt)("h3",{id:"membuat-privileges"},"Membuat privileges"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},'grant all privileges on database "belajar" to ucup;\n')),(0,l.kt)("h3",{id:"koneksi-ke-database"},"Koneksi ke Database"),(0,l.kt)("p",null,"Untuk memilih database / koneksi ke database yang ingin digunakan ikuti perintah di bawah ini:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"\\c belajar\n")),(0,l.kt)("h2",{id:"table"},"Table"),(0,l.kt)("h3",{id:"membuat-table"},"Membuat Table"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE TABLE table_name (\n    Column_name + data type + constrains if any;\n)\n")),(0,l.kt)("p",null,"Untuk melihat daftar tipe data dalam PostgreSQL, bisa dilihat di ",(0,l.kt)("a",{parentName:"p",href:"https://www.postgresql.org/docs/current/datatype.html"},"dokumentasi resmi PostreSQL"),".  "),(0,l.kt)("p",null,"contoh"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE TABLE person (\nid INT,\nfirst_name VARCHAR(50),\nlast_name VARCHAR(50),\nemail VARCHAR(50)\n); \n")),(0,l.kt)("h3",{id:"melihat-daftar-table"},"Melihat Daftar Table"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"\\d\n")),(0,l.kt)("h3",{id:"melihat-propertiesdetail-table"},"Melihat Properties/Detail Table"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"\\d person\n")),(0,l.kt)("h3",{id:"menghapus-table"},"Menghapus Table"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"DROP TABLE person;\n")),(0,l.kt)("h3",{id:"membuat-table-dengan-constraint"},"Membuat Table dengan Constraint"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE TABLE person (                                        \nid BIGSERIAL NOT NULL PRIMARY KEY,                                     \nfirst_name VARCHAR(50) NOT NULL, \nlast_name VARCHAR(50) NOT NULL, \ncountry VARCHAR(50) NOT NULL,                                       \nemail VARCHAR(50) NOT NULL UNIQUE                                      \n);\n")),(0,l.kt)("p",null,"BIGSERIAL adalah tipe data yang memiliki constraint auto increment."),(0,l.kt)("h2",{id:"update-table"},"Update Table"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"ALTER TABLE table_name\nADD COLUMN new_column_name data_type constraint;\n")),(0,l.kt)("p",null,"Contoh :"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"alter table person\nadd date_of_birth DATE NOT NULL;\n")),(0,l.kt)("h2",{id:"insert-table"},"Insert Table"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"INSERT INTO person (first_name, last_name, email, country, date_of_birth)\nVALUES ('Ucup', 'Topekox', 'ucup@tutorialtimposu.com', 'Indonesia', '1990-01-01');\n")),(0,l.kt)("h3",{id:"melihat-isi-table"},"Melihat isi Table"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * FROM person;\n")),(0,l.kt)("h3",{id:"insert-data-dari-file"},"Insert Data dari File"),(0,l.kt)("p",null,"Kita bisa generate random data di ",(0,l.kt)("a",{parentName:"p",href:"https://www.mockaroo.com/"},"https://www.mockaroo.com/"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"\\i /Users/ucup/Downloads/person.sql\n")),(0,l.kt)("h2",{id:"select"},"SELECT"),(0,l.kt)("p",null,"Tip: untuk mengubah tampilan/Expanded hasil query 'select' gunakan perintah ",(0,l.kt)("inlineCode",{parentName:"p"},"\\x"),"."),(0,l.kt)("h3",{id:"menampilkan-jumlah-data"},"Menampilkan Jumlah Data"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"select from person;\n")),(0,l.kt)("h3",{id:"menampilkan-data-berdasarkan-nama-field"},"Menampilkan data berdasarkan nama field"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"select * first_name from person;\n")),(0,l.kt)("h3",{id:"mencari-data-berdasarkan-email"},"Mencari data berdasarkan email"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"select * from person where email='mgiraudo6@nyu.edu';\n")),(0,l.kt)("h3",{id:"sortir-data"},"Sortir data"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"select * from person order by date_of_birth asc;\n")),(0,l.kt)("h3",{id:"sortir-data-secara-terbalik"},"Sortir data secara terbalik"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"select * from person order by date_of_birth desc;\n\nselect * from person order by email, date_of_birth desc\n")),(0,l.kt)("h3",{id:"select-distinct"},"SELECT DISTINCT"),(0,l.kt)("p",null,"Menampilkan data hanya satu dari value yang duplikat."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT DISTINCT country FROM person ORDER BY country ASC;\n")),(0,l.kt)("h3",{id:"select-where"},"SELECT WHERE"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * FROM person WHERE country = 'Indonesia';\n")),(0,l.kt)("h3",{id:"select-where-and"},"SELECT WHERE AND"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * FROM person WHERE country = 'Indonesia' AND last_name = 'Ambrosi';\n")),(0,l.kt)("h3",{id:"select-where-and-or"},"SELECT WHERE AND OR"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * FROM person WHERE country = 'Indonesia' AND (last_name = 'Ambrosi' OR first_name='Jocko');\n")),(0,l.kt)("h3",{id:"select-comparison-operators--operator-pembanding"},"SELECT Comparison Operators / Operator Pembanding"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT 1 = 1;\n")),(0,l.kt)("p",null,"Hasil ",(0,l.kt)("inlineCode",{parentName:"p"},"t")," untuk true dan ",(0,l.kt)("inlineCode",{parentName:"p"},"f")," untuk false."),(0,l.kt)("p",null,"Daftar Operator dengan asumsi ",(0,l.kt)("em",{parentName:"p"},"a")," bernilai 10 dan ",(0,l.kt)("em",{parentName:"p"},"b")," bernilai 20:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Operator"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Example"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"="),(0,l.kt)("td",{parentName:"tr",align:null},"Jika nilai sama maka true."),(0,l.kt)("td",{parentName:"tr",align:null},"(a = b) is not true.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"!="),(0,l.kt)("td",{parentName:"tr",align:null},"Jika nilai tidak sama true."),(0,l.kt)("td",{parentName:"tr",align:null},"(a != b) is true.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"<",">"),(0,l.kt)("td",{parentName:"tr",align:null},"Memeriksa apakah nilai kedua nilai sama atau tidak, jika nilainya tidak sama maka kondisinya menjadi true."),(0,l.kt)("td",{parentName:"tr",align:null},"(a ","<",">"," b) is true.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},">"),(0,l.kt)("td",{parentName:"tr",align:null},"Jika nilai sebelah kiri operator lebih besar dari nilai sebelah kanan operator maka true."),(0,l.kt)("td",{parentName:"tr",align:null},"(a > b) is not true.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"<"),(0,l.kt)("td",{parentName:"tr",align:null},"Jika nilai sebelah kiri operator lebih kecil dari nilai sebelah kanan operator maka true."),(0,l.kt)("td",{parentName:"tr",align:null},"(a < b) is true.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},">="),(0,l.kt)("td",{parentName:"tr",align:null},"Jika nilai sebelah kiri operator lebih besar atau sama dengan  nilai sebelah kanan operator maka true."),(0,l.kt)("td",{parentName:"tr",align:null},"(a >= b) is not true.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"<="),(0,l.kt)("td",{parentName:"tr",align:null},"Jika nilai sebelah kiri operator lebih kecil atau sama dengan  nilai sebelah kanan operator maka true."),(0,l.kt)("td",{parentName:"tr",align:null},"(a <= b) is true.")))),(0,l.kt)("h3",{id:"limit"},"LIMIT"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * FROM person LIMIT 5;\n")),(0,l.kt)("p",null,"result:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"id | first_name | last_name  |   country   |           email           | date_of_birth\n----+------------+------------+-------------+---------------------------+---------------\n  1 | Maddalena  | Chisnall   | South Korea | mchisnall0@bloomberg.com  | 1986-01-27\n  2 | Kari       | Norwich    | Indonesia   | knorwich1@themeforest.net | 1989-12-01\n  3 | Sybila     | Carreyette | China       | scarreyette2@apple.com    | 1999-07-14\n  4 | Cliff      | Kruger     | Portugal    | ckruger3@yandex.ru        | 2000-11-01\n  5 | Arlin      | Cissen     | Georgia     | acissen4@about.com        | 1987-09-29\n(5 rows)\n")),(0,l.kt)("h3",{id:"offset"},"OFFSET"),(0,l.kt)("p",null,"Offset digunakan untuk mengambil data dari nilai awal baris pada table."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * FROM person OFFSET 5 LIMIT 5;\n")),(0,l.kt)("p",null,"result:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"id | first_name | last_name |    country     |          email           | date_of_birth\n----+------------+-----------+----------------+--------------------------+---------------\n  6 | Inger      | Oda       | Czech Republic | ioda5@diigo.com          | 1993-02-02\n  7 | Jilleen    | Tartt     | Brazil         | jtartt6@msn.com          | 1992-09-07\n  8 | Ban        | Insull    | China          | binsull7@canalblog.com   | 1996-11-05\n  9 | Evelin     | Valentin  | China          | evalentin8@pinterest.com | 1998-09-29\n 10 | Hildegaard | Aldin     | China          | haldin9@hexun.com        | 1993-05-10\n(5 rows)\n")),(0,l.kt)("h3",{id:"fetch"},"FETCH"),(0,l.kt)("p",null,"Mengambil jumlah data yang diinginkan misal kita butuh 3 data:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * FROM person OFFSET 5 FETCH FIRST 3 ROW ONLY;\n")),(0,l.kt)("p",null,"result:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"id | first_name | last_name |    country     |         email          | date_of_birth\n----+------------+-----------+----------------+------------------------+---------------\n  6 | Inger      | Oda       | Czech Republic | ioda5@diigo.com        | 1993-02-02\n  7 | Jilleen    | Tartt     | Brazil         | jtartt6@msn.com        | 1992-09-07\n  8 | Ban        | Insull    | China          | binsull7@canalblog.com | 1996-11-05\n(3 rows)\n")),(0,l.kt)("h3",{id:"or"},"OR"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"select * from person where country = 'China' or country = 'Indonesia';\n")),(0,l.kt)("h3",{id:"in"},"IN"),(0,l.kt)("p",null,"Menampilkan data sesuai dalam ",(0,l.kt)("inlineCode",{parentName:"p"},"IN"),":"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"select * from person where country in ('Indonesia', 'Malaysia', 'Thailand');\n")),(0,l.kt)("h3",{id:"between"},"BETWEEN"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"select * from person where date_of_birth between '1991-01-01' and '1993-12-31';\n")),(0,l.kt)("h3",{id:"like"},"LIKE"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * FROM person WHERE email LIKE '%@msn.com';\n")),(0,l.kt)("p",null,"Menampilkan data dengan jumlah 6 karakter dengan menggunakan underscore ",(0,l.kt)("inlineCode",{parentName:"p"},"_")," dan  diakhiri dengan alamat domain email ",(0,l.kt)("inlineCode",{parentName:"p"},"@...")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * FROM person WHERE email LIKE '______@%';\n")),(0,l.kt)("h3",{id:"ilike"},"ILIKE"),(0,l.kt)("p",null,"ILIKE berfungsi untuk menonaktifkan perbedaan uppercase dan lowercase misalnya tidak ada perbedaan untuk pencarian yang diawali dengan huruf ",(0,l.kt)("inlineCode",{parentName:"p"},"p")," dan ",(0,l.kt)("inlineCode",{parentName:"p"},"P"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * FROM person WHERE country ilike 'p%';\n")),(0,l.kt)("h3",{id:"group"},"GROUP"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT country FROM person GROUP BY country;\n")),(0,l.kt)("p",null,"dengan count"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT country, count(*) FROM person GROUP BY country;\n")),(0,l.kt)("h3",{id:"group-by-having"},"GROUP BY HAVING"),(0,l.kt)("p",null,"Having digunakan untuk menampilkan data berdasarkan jumlah kondisi valuenya. Misalnya menampilkan data country yang groupnya / jumlah negaranya lebih dari 5."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT country, count(*) FROM person GROUP BY country HAVING COUNT(*) > 5 ORDER BY country ASC;\n")),(0,l.kt)("p",null,"Untuk macam-macam jenis Aggregate Functions Postgre bisa dilihat ",(0,l.kt)("a",{parentName:"p",href:"https://www.postgresql.org/docs/current/functions-aggregate.html"},"di dokumentasi resminya"),"."),(0,l.kt)("h3",{id:"create-new-table-car"},"Create New Table car"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"create table car (\n    id BIGSERIAL NOT NULL PRIMARY KEY,\n    merk VARCHAR(100) NOT NULL,\n    model VARCHAR(100) NOT NULL,\n    price NUMERIC(19,2) NOT NULL\n);\n")),(0,l.kt)("h3",{id:"max"},"MAX"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT MAX(price) FROM car;\n")),(0,l.kt)("h3",{id:"min"},"MIN"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT MIN(price) FROM car;\n")),(0,l.kt)("h3",{id:"avg"},"AVG"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT AVG(price) FROM car;\n")),(0,l.kt)("p",null,"example result:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"        avg\n--------------------\n 54510.659000000000\n(1 row)\n")),(0,l.kt)("h3",{id:"round"},"ROUND"),(0,l.kt)("p",null,"Round digunakan untuk mengubah ke kebilangan bulat."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT ROUND(AVG(price)) FROM car;\n")),(0,l.kt)("p",null,"example result"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"round\n-------\n 54511\n(1 row)\n")),(0,l.kt)("h3",{id:"gabungan-min-max"},"Gabungan MIN, MAX"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT merk, model, MIN(price) FROM car GROUP BY merk, model;\n")),(0,l.kt)("p",null,"example result:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"     merk      |     model      |   min\n---------------+----------------+----------\n Toyota        | Land Cruiser   | 25999.00\n Mercedes-Benz | S-Class        | 28967.00\n BMW           | M6             | 17124.00\n Saturn        | Aura           | 29511.00\n Kia           | Amanti         | 98550.00\n Oldsmobile    | Silhouette     | 10639.00\n Daewoo        | Lanos          | 35664.00\n Subaru        | Forester       | 28026.00\n Ford          | Econoline E350 | 37298.00\n Ferrari       | 612 Scaglietti | 55531.00\n(10 rows)\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT merk, model, MIN(price) FROM car GROUP BY merk, model;\n")),(0,l.kt)("p",null,"example result:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"     merk      |     model      |   min\n---------------+----------------+----------\n Toyota        | Land Cruiser   | 25999.00\n Mercedes-Benz | S-Class        | 28967.00\n BMW           | M6             | 17124.00\n Saturn        | Aura           | 29511.00\n Kia           | Amanti         | 98550.00\n Oldsmobile    | Silhouette     | 10639.00\n Daewoo        | Lanos          | 35664.00\n Subaru        | Forester       | 28026.00\n Ford          | Econoline E350 | 37298.00\n Ferrari       | 612 Scaglietti | 55531.00\n(10 rows)\n")),(0,l.kt)("h3",{id:"sum"},"SUM"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT SUM(price) FROM car;\n")),(0,l.kt)("p",null,"SUM Group By"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT merk, SUM(price) FROM car GROUP BY merk;\n")),(0,l.kt)("h3",{id:"mathematical-functions-and-operators"},"Mathematical Functions and Operators"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT 10 + 2;\n")),(0,l.kt)("p",null,"Untuk selengkapnya silahkan ke ",(0,l.kt)("a",{parentName:"p",href:"https://www.postgresql.org/docs/current/functions-math.html"},"Dokumentasi Aritmatika")," PostgreSQL."),(0,l.kt)("h3",{id:"studi-kasus-aritmatika"},"Studi Kasus Aritmatika"),(0,l.kt)("p",null,"Memberi diskon 10% dari harga mobil:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT id, merk, model, price, price * .10 from car;\n")),(0,l.kt)("p",null,"Membulatkan nilai"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT id, merk, model, price, round(price * .10) from car;\n")),(0,l.kt)("p",null,"Mengurangi harga total dengan diskon:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT id, merk, model, price, round(price * .10), round(price - (price * .10)) from car;\n")),(0,l.kt)("p",null,"Memberikan nilai desimal 2 digit."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT id, merk, model, price, round(price * .10), round(price - (price * .10), 2) from car;\n")),(0,l.kt)("h3",{id:"coalesce"},"COALESCE"),(0,l.kt)("p",null,"Coalesce biasanya digunakan untuk mereplace suatu data. Misalnya kita akan mereplace value dalam kolom yang bernilai ",(0,l.kt)("inlineCode",{parentName:"p"},"null")," atau kosong ",(0,l.kt)("inlineCode",{parentName:"p"},"''"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"select coalesce(email, 'Email Not Provided') from person;\n")),(0,l.kt)("h3",{id:"nullif"},"NULLIF"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"NULLIF(argument_1,argument_2);\n")),(0,l.kt)("p",null,"function ",(0,l.kt)("inlineCode",{parentName:"p"},"NULLIF")," akan mengembalikan ",(0,l.kt)("inlineCode",{parentName:"p"},"null")," value jika ",(0,l.kt)("inlineCode",{parentName:"p"},"argument_1")," sama dengan ",(0,l.kt)("inlineCode",{parentName:"p"},"argument_2"),", selain itu akan mengembalikan ",(0,l.kt)("inlineCode",{parentName:"p"},"argument_1"),"."),(0,l.kt)("p",null,"contoh:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"select 10 / nullif(2, 9);\n\n ?column?\n----------\n        5\n(1 row)\n")),(0,l.kt)("p",null,"contoh 2:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"select coalesce(10 / nullif(0, 0), 0);\n \ncoalesce\n----------\n        0\n(1 row)\n")),(0,l.kt)("h3",{id:"timestamp"},"TIMESTAMP"),(0,l.kt)("p",null,"Lihat selengkapnya di ",(0,l.kt)("a",{parentName:"p",href:"https://www.postgresql.org/docs/current/datatype-datetime.html"},"dokumentasi resminya"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT NOW();\n              \n\n            now\n-------------------------------\n 2022-06-01 14:24:26.306704+08\n(1 row)\n")),(0,l.kt)("p",null,"dengan tanggal"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT NOW()::DATE;\n")),(0,l.kt)("p",null,"dengan waktu"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT NOW()::TIME;\n")),(0,l.kt)("p",null,"Mengurangi waktu saat ini 1 tahun"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT NOW() - INTERVAL '1 YEAR';\n\n\n           ?column?\n-------------------------------\n 2021-06-01 14:33:49.919447+08\n(1 row)\n")),(0,l.kt)("p",null,"menambah wwaktu saat ini 1 bulan"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT NOW() +  INTERVAL '1 MONTHS';\n\n\n           ?column?\n-------------------------------\n 2022-07-01 14:34:14.937614+08\n(1 row)\n")),(0,l.kt)("h3",{id:"extract"},"EXTRACT"),(0,l.kt)("p",null,"Digunakan untuk mengekstrak bagian dari Datetime."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"select now();\n \n             now\n-------------------------------\n 2022-06-01 15:18:11.776978+08\n(1 row)\n\n\nselect extract(month from now());\n\n date_part\n-----------\n         6\n(1 row)\n\n\nselect extract(year from now());\n\n\n date_part\n-----------\n      2022\n(1 row)\n\n\nselect extract(day from now());\n\n\n date_part\n-----------\n         1\n(1 row)\n\n\nselect extract(dow from now());\n\n\n date_part\n-----------\n         3\n(1 row)\n\n\nselect extract(century from now()); \n\n\n date_part\n-----------\n        21\n(1 row)\n")),(0,l.kt)("h3",{id:"age"},"AGE()"),(0,l.kt)("p",null,"Digunakan untuk menghitung usia"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"select first_name, last_name, date_of_birth, AGE(NOW(), date_of_birth) from person;\n")),(0,l.kt)("h3",{id:"is-null"},"IS NULL"),(0,l.kt)("p",null,"Menampilkan data yang nilainya null"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"select * from person where email IS NULL;\n")),(0,l.kt)("h3",{id:"constraint"},"CONSTRAINT"),(0,l.kt)("h3",{id:"primary-key"},"PRIMARY KEY"),(0,l.kt)("p",null,"Menghapus constraint primary key"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"alter table person drop constraint person_pkey;\n")),(0,l.kt)("p",null,"Membuat Primary Key"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"alter table person add primary key(id);\n")),(0,l.kt)("h3",{id:"unique"},"UNIQUE"),(0,l.kt)("p",null,"Menambahkan constraint unique"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"ALTER TABLE person ADD CONSTRAINT unique_email_name UNIQUE (email);\n")),(0,l.kt)("p",null,"atau"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"alter table person add unique (email);\n")),(0,l.kt)("p",null,"Menghapus constraint unique"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"ALTER TABLE person DROP CONSTRAINT unique_email_name;\n")),(0,l.kt)("h3",{id:"check"},"CHECK"),(0,l.kt)("p",null,"Digunakan untuk hanya membatasi value yang ingin dimasukan."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"ALTER TABLE person ADD CONSTRAINT gender_constraint CHECK (gender = 'Female' OR gender = 'Male');\n")),(0,l.kt)("h2",{id:"delete"},"DELETE"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"delete from person where id = 2;\n")),(0,l.kt)("p",null,"Dengan kondisi"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"delete from person where gender = 'Female' and country = 'Nigeria';\n")),(0,l.kt)("h2",{id:"update"},"UPDATE"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"update person set first_name = 'ucup' where id = 11;\n")),(0,l.kt)("p",null,"Multiple kolom"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"update person set first_name='ucup', last_name='topekox', email='ucup@tutorialtimposu.com' where id = 11;\n")),(0,l.kt)("h2",{id:"on-conflict-do-nothing"},"ON CONFLICT DO NOTHING"),(0,l.kt)("p",null,"Berfungsi untuk tidak menghiraukan error ketika menginput data yang duplikat terhadap feild yang memiliki key atau field yang unique."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"insert into person (id, first_name, last_name, email, gender, country, date_of_birth) values (2, 'Lorri', 'Werendell', 'lwerendell1@cloudflare.com', 'Female', 'China', '2000-07-28') ON CONFLICT  (id) DO NOTHING;\n")),(0,l.kt)("p",null,"Catatan: Query ini hanya berfungsi terhadap field yang memiliki constraint."),(0,l.kt)("h2",{id:"on-conflict-do-update"},"ON CONFLICT DO UPDATE"),(0,l.kt)("p",null,"Jika terdapat data konflik pada constraint maka tetap akan di update."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"insert into person (id, first_name, last_name, email, gender, country, date_of_birth) values (2, 'Naruto', 'Uzumaki', 'naruto@naruto.com', 'Female', 'China', '2000-07-28') ON CONFLICT  (id) DO UPDATE set first_name = EXCLUDED.first_name, last_name = EXCLUDED.last_name, email = EXCLUDED.email;\n")),(0,l.kt)("h2",{id:"relations"},"RELATIONS"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"create table car (                                                  \nid bigserial not null primary key,\nmerk varchar(100) not null,\nmodel varchar(100) not null,\nprice numeric(19, 2) not null\n);\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"create table person (                                               \nid bigserial not null primary key,\nfirst_name varchar(50) not null, \nlast_name varchar(50) not null, \ngender varchar(7) not null,\nemail varchar(100),\ndate_of_birth date not null,      \ncountry varchar(50) not null,\ncar_id bigint references car (id)\n);\n")),(0,l.kt)("h3",{id:"inner-join"},"INNER JOIN"),(0,l.kt)("p",null,"Menampilkan data yang punya relasi saja."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"select * from person join car on person.car_id = car.id;\n")),(0,l.kt)("p",null,"Contoh lain:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"select person.first_name, car.merk, car.model, car.price from person join car on person.car_id = car.id;\n")),(0,l.kt)("h3",{id:"left-join"},"LEFT JOIN"),(0,l.kt)("p",null,"Hanya menampilkan data yang berada di tabel sisi kiri dan tabel lain yang berelasi."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"select * from person left join car on car.id = person.car_id;\n")),(0,l.kt)("p",null,"Menampilkan data ",(0,l.kt)("inlineCode",{parentName:"p"},"left join")," yang memiliki car_id ",(0,l.kt)("inlineCode",{parentName:"p"},"null")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"select * from person left join car on car.id = person.car_id where person.car_id IS NULL;\n")),(0,l.kt)("h3",{id:"hapus-record-yang-berelasi-foreign-key"},"Hapus Record yang berelasi Foreign Key"),(0,l.kt)("p",null,"Untuk menghapus record yang berelasi pastikan untuk mengahpus data yang sudah teralasi sebelum yang berada tabel master."),(0,l.kt)("h2",{id:"export-query-to-csv"},"Export Query to CSV"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"\\copy (select * from person left join car on car.id = person.car_id) to '/Users/ucup/Desktop/result.csv' delimiter '.'CSV HEADER;\n")),(0,l.kt)("h2",{id:"serial--sequence"},"Serial & Sequence"),(0,l.kt)("p",null,"Cek sequnce"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"\\d\n             List of relations\n Schema |     Name      |   Type   | Owner\n--------+---------------+----------+-------\n public | car           | table    | ucup\n public | car_id_seq    | sequence | ucup\n public | person        | table    | ucup\n public | person_id_seq | sequence | ucup\n(4 rows)\n\nselect * from person_id_seq;\n\n last_value | log_cnt | is_called\n------------+---------+-----------\n         11 |      22 | t\n(1 row)\n")),(0,l.kt)("p",null,"Membuat next value sequence"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"select nextval('person_id_seq'::regclass);\n\n nextval\n---------\n      12\n(1 row)\n")),(0,l.kt)("p",null,"Reset value sequence"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"alter sequence person_id_seq RESTART WITH 11;\n")),(0,l.kt)("h3",{id:"show-all-extensions"},"Show All Extensions"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"select * from pg_available_extensions ;\n")),(0,l.kt)("h3",{id:"install-uuid-extension"},"Install UUID Extension"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},'create extension if not exists "uuid-ossp";\n')),(0,l.kt)("p",null,"Cek semua function"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"\\df\n")),(0,l.kt)("p",null,"Generate UUID"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"select uuid_generate_v4();\n")),(0,l.kt)("h2",{id:"uuid-example"},"UUID Example"),(0,l.kt)("p",null,"Contoh menggunakan UUID generator sebagai id primary key."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"create table car (\n    car_uid UUID NOT NULL PRIMARY KEY,\n    merk VARCHAR(100) NOT NULL,\n    model VARCHAR(100) NOT NULL,\n    price NUMERIC(19, 2) NOT NULL CHECK (price > 0)\n);\n\ncreate table person (\n    person_uid UUID NOT NULL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50),\n    gender VARCHAR(50) NOT NULL,\n    country VARCHAR(50) NOT NULL,\n    date_of_birth DATE,\n    car_uid UUID REFERENCES car(car_uid),\n    UNIQUE(car_uid),\n    UNIQUE(email)\n);\n\n-- Insert into person\ninsert into person (person_uid, first_name, last_name, email, gender, country, date_of_birth) \n    values (uuid_generate_v4(), 'Krissie', 'Dorie', null, 'Female', 'Ukraine', '1994-02-26');\n\ninsert into person (person_uid, first_name, last_name, email, gender, country, date_of_birth) \n    values (uuid_generate_v4(), 'Mahmud', 'Cundict', 'mcundictl@opensource.org', 'Male', 'China', '1993-12-05');\n\ninsert into person (person_uid, first_name, last_name, email, gender, country, date_of_birth) \n    values (uuid_generate_v4(), 'Gusta', 'Breed', 'gbreed1g@vistaprint.com', 'Female', 'Russia', '1987-06-05');\n\n-- Insert into car\ninsert into car (car_uid, merk, model, price) values (uuid_generate_v4(), 'GMC', 'Yukon', 98421);\ninsert into car (car_uid, merk, model, price) values (uuid_generate_v4(), 'Mercedes-Benz', 'CL-Class', 55099);\n")),(0,l.kt)("p",null,"Query : "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"select * from person; \n             \nperson_uid                            | first_name | last_name |          email           | gender | country | date_of_birth | car_uid \n--------------------------------------+------------+-----------+--------------------------+--------+---------+---------------+---------\n bc16f40f-44ae-4bce-98d0-3680d948f45e | Krissie    | Dorie     |                          | Female | Ukraine | 1994-02-26    | \n 4c627003-4992-43e5-83eb-190886c565ab | Mahmud     | Cundict   | mcundictl@opensource.org | Male   | China   | 1993-12-05    | \n 4b982532-a05c-4bb3-b7d7-b75236067f43 | Gusta      | Breed     | gbreed1g@vistaprint.com  | Female | Russia  | 1987-06-05    | \n(3 rows)\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"select * from car;\n\ncar_uid                               |     merk      |  model   |  price   \n--------------------------------------+---------------+----------+----------\n 2330fb0e-c9e1-46bb-b408-c7bd5b3c8f64 | GMC           | Yukon    | 98421.00\n c7ec543b-e094-4065-817b-e0847ebd9e1c | Mercedes-Benz | CL-Class | 55099.00\n(2 rows)\n")),(0,l.kt)("p",null,"Insert Relasi"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"update person set car_uid='c7ec543b-e094-4065-817b-e0847ebd9e1c' where person_uid='bc16f40f-44ae-4bce-98d0-3680d948f45e';\n\nupdate person set car_uid='2330fb0e-c9e1-46bb-b408-c7bd5b3c8f64' where person_uid='4b982532-a05c-4bb3-b7d7-b75236067f43';\n")),(0,l.kt)("p",null,"Show data"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"select * from person join car on person.car_uid = car.car_uid;\n\n-- menggunakan using\n\nselect * from person join car using(car_uid);\n")))}m.isMDXComponent=!0}}]);