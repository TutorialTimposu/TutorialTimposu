"use strict";(self.webpackChunktimposu=self.webpackChunktimposu||[]).push([[4442],{9143:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"java-collection/iterable","title":"Java Iterable","description":"Interface Iterable adalah interface yang merepresentasikan kumpulan objek/elemen yang dapat diulang/iterable, atau dengan kata lain Iterable dapat mengembalikan elemen-elemennya satu per satu. Class yang mengimplementasikan interface ini dapat mengulang/iterable elemen-elemennya. Interface Iterable memiliki turunan class Collection.","source":"@site/tutorial/java/java-collection/02-iterable.md","sourceDirName":"java-collection","slug":"/java-collection/iterable","permalink":"/java/java-collection/iterable","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2,"title":"Java Iterable"},"sidebar":"tutorialSidebar","previous":{"title":"Apa itu Java Collection?","permalink":"/java/java-collection/apa-itu-collections"},"next":{"title":"Java Interface Collection","permalink":"/java/java-collection/collection"}}');var i=n(4848),r=n(8453);const l={sidebar_position:2,title:"Java Iterable"},o=void 0,s={},c=[];function m(e){const a={code:"code",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(a.p,{children:["Interface ",(0,i.jsx)(a.code,{children:"Iterable"})," adalah interface yang merepresentasikan kumpulan objek/elemen yang dapat diulang/iterable, atau dengan kata lain ",(0,i.jsx)(a.code,{children:"Iterable"})," dapat mengembalikan elemen-elemennya satu per satu. Class yang mengimplementasikan interface ini dapat mengulang/iterable elemen-elemennya. Interface ",(0,i.jsx)(a.code,{children:"Iterable"})," memiliki turunan class ",(0,i.jsx)(a.code,{children:"Collection"}),"."]}),"\n",(0,i.jsx)(a.p,{children:"Contoh:"}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-java",children:'import java.util.Iterator;\nimport java.util.List;\n\npublic class DemoIterable {\n\n    public static void main(String[] args) {\n\n        Iterable<String> names = List.of("Ucup", "Ade", "Recky");\n\n        for (String name : names) {\n            System.out.println(name);\n        }\n\n    }\n}\n'})}),"\n",(0,i.jsxs)(a.p,{children:["Sebelum adanya iterable cara lama menggunakan method ",(0,i.jsx)(a.code,{children:"iterator()"}),". Interface ",(0,i.jsx)(a.code,{children:"Iterable"})," sendiri mempunyai kontrak method ",(0,i.jsx)(a.code,{children:"Iterator<T> iterator();"})," yang bisa digunakan untuk melakukan iterasi."]}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-java",children:'Iterable<String> names = List.of("Ucup", "Ade", "Recky");\n\n/**\n * Cara lama menggunakan Iterator\n */\nSystem.out.println("\\nMENGGUNAKAN ITERATOR");\n\nIterator<String> iterator = names.iterator();\n\nwhile (iterator.hasNext()) {\n    System.out.println(iterator.next());\n}\n'})})]})}function u(e={}){const{wrapper:a}={...(0,r.R)(),...e.components};return a?(0,i.jsx)(a,{...e,children:(0,i.jsx)(m,{...e})}):m(e)}},8453:(e,a,n)=>{n.d(a,{R:()=>l,x:()=>o});var t=n(6540);const i={},r=t.createContext(i);function l(e){const a=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function o(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),t.createElement(r.Provider,{value:a},e.children)}}}]);